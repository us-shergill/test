REPLACE PROCEDURE HSPROCS.
PROC_FOR_AGENT_AGREEMENT_HISTORY
(OUT PROC_MSG VARCHAR(300))

SQL SECURITY INVOKER
BEGIN

--Get Agent IDs and Names for lookup table
CREATE MULTISET VOLATILE TABLE LU AS (
SELECT DISTINCT
D.PDCR_CD,
D.AGENT_ID AS AGENCY_ID,
CASE WHEN D.FIRM_IND = 'I' THEN CONCAT (D.PDCR_LNAME, ', ', D.PDCR_FNAME)
ELSE D.CORP_NAME END AS NAME,
D.FIRM_IND AS ENT_TYPE,
D.PDCR_STATUS
FROM TRXHUB_CORE_V.BROKER_SIRCON_PRODUCER_DEMOGRAPHIC AS D
QUALIFY ROW_NUMBER() OVER (PARTITION BY D.PDCR_CD ORDER BY D.PDCR_STATUS, D.LOAD_DTTS DESC) = 1
) WITH DATA PRIMARY INDEX (PDCR_CD) ON COMMIT PRESERVE ROWS
;

COLLECT STATS COLUMN (PDCR_CD) ON LU;

CREATE MULTISET VOLATILE TABLE temp_BROKER_SIRCON_AGENT AS (
SELECT DISTINCT
agent.PDCR_CD as Agent_PDCR_CD,
agent.AGENT_ID as Agent_AgentID,
agent.NATL_PDCR_NUM as Agent_NPN,
agent.FIRM_IND,
CASE WHEN agent.PDCR_LNAME = '' THEN agent.CORP_NAME
ELSE agent.PDCR_LNAME || ', ' || agent.PDCR_FNAME END as Agent_Name,
agent.PDCR_FNAME as Agent_FName,
agent.PDCR_LNAME as Agent_LName,
cast (case when trim(agent.PDCR_EFF_DT) ='0001-01-01' Then '1900-01-01' else trim(agent.PDCR_EFF_DT) end as date) as PDCR_EFF_DT,
cast (case when trim(agent.PDCR_TERM_DT) ='0001-01-01' Then '1900-01-01' else trim(agent.PDCR_TERM_DT) end as date) as PDCR_TERM_DT,
hier.PDCR_LVL_NUM,
hier.PARENT_LVL_NUM,
hier.PARENT_PDCR_CD,
hier.SIRCON_AGENT_ID,
hier.AGRMT_EFF_DT,
hier.AGRMT_END_DT,
CASE WHEN hier.PDCR_LVL_NUM = 5 THEN 'Y' ELSE 'N' END as DirectPayAgency,
agent.LOAD_DTTS as ETL_LOAD_DT_TM,
agent.LASTUPDT_DTTS as ETL_LAST_UPDT_DT_TM

FROM TRXHUB_CORE_V.BROKER_SIRCON_PRODUCER_HIERARCHY hier
INNER JOIN TRXHUB_CORE_V.BROKER_SIRCON_PRODUCER_DEMOGRAPHIC agent ON hier.PDCR_CD = agent.PDCR_CD
and hier.PDCR_LVL_NUM IN (5, 8, 11) and
hier.actv_ind = 1 and
agent.actv_ind = 1
) WITH DATA PRIMARY INDEX (Agent_PDCR_CD) ON COMMIT PRESERVE ROWS
;

COLLECT STATS COLUMN (Agent_PDCR_CD) ON temp_BROKER_SIRCON_AGENT;

---testing out a permanent table
--Agreement table, get rows with most recent update date
CREATE MULTISET VOLATILE TABLE Hier AS (
SELECT DISTINCT
H.PDCR_CD,
H.AGRMT_ID, --behind the scenes identifier assigned by Sircon, used by Broker/GGK0 to match data for updates, helpful when investigating feed issues
H.SIRCON_AGENT_ID,
LU1.AGENCY_ID,
LU1.ENT_TYPE,
H.PDCR_LVL_NUM,
-- Number to Name assignments haven't changed since July 2014, probably won't until 2023 if at all, safe to hard code
CASE WHEN H.PDCR_LVL_NUM = '0' THEN 'FMO'
WHEN H.PDCR_LVL_NUM = '2' THEN 'SGA'
WHEN H.PDCR_LVL_NUM = '3' THEN 'MGA'
WHEN H.PDCR_LVL_NUM = '4' THEN 'GA'
WHEN H.PDCR_LVL_NUM = '5' AND LU1.ENT_TYPE = 'I' THEN 'AGENT-DIRECT PAY'
WHEN H.PDCR_LVL_NUM = '5' AND LU1.ENT_TYPE = 'C' THEN 'PERSONAL BUSINESS ENTITY'
WHEN H.PDCR_LVL_NUM = '8' THEN 'AGENT-AOC'
WHEN H.PDCR_LVL_NUM = '10' THEN 'AFMO' -- New Contract Level will be in prod on 7/1/22
WHEN H.PDCR_LVL_NUM = '11' THEN 'AGENT-LICENSE ONLY' -- New Contract Level will be in prod on 7/1/22
--New levels added for SGD Reporting, 2/13/2024
WHEN H.PDCR_LVL_NUM = '12' THEN 'RFMO'
WHEN H.PDCR_LVL_NUM = '13' THEN 'NFMO'
WHEN H.PDCR_LVL_NUM = '14' THEN 'SGA2'
ELSE H.PDCR_LVL_NUM END AS PDCR_LEVEL,
H.AGRMT_EFF_DT,
H.AGRMT_END_DT,
H.AFLTN_AGRMT_ID,
H.PARENT_PDCR_CD,
--These two toplines are deeply embedded in Sircon, Broker, and Contracting processes. Safe to hard code.
Case when H.PARENT_PDCR_CD = '888888' THEN 'CIGNA MEDICARE TOP LINE'
WHEN H.PARENT_PDCR_CD = '777777' THEN 'CIGNA HEALTHCARE OF AZ - DP'
ELSE LU2.NAME END AS PARENT_NAME,
LU2.AGENCY_ID AS PARENT_AGENCY_ID,
LU2.ENT_TYPE AS PARENT_ENT_TYPE,
CASE WHEN H.PARENT_PDCR_CD = '888888' THEN 'MC' ELSE H.PARENT_LVL_NUM
END AS PARENT_LVL_NUM,
-- Number to Name assignments haven't changed since July 2014, probably won't until 2023 if at all, safe to hard code
CASE WHEN H.PARENT_PDCR_CD = '888888' THEN 'MC'
WHEN H.PARENT_LVL_NUM = '0' THEN 'FMO'
WHEN H.PARENT_LVL_NUM = '2' THEN 'SGA'
WHEN H.PARENT_LVL_NUM = '3' THEN 'MGA'
WHEN H.PARENT_LVL_NUM = '4' THEN 'GA'
WHEN H.PARENT_LVL_NUM = '5' AND LU2.ENT_TYPE = 'I' THEN 'AGENT-DIRECT PAY'
WHEN H.PARENT_LVL_NUM = '5' AND LU2.ENT_TYPE = 'C' THEN 'PERSONAL BUSINESS ENTITY'
WHEN H.PARENT_LVL_NUM = '8' THEN 'AGENT-AOC'
WHEN H.PARENT_LVL_NUM = '10' THEN 'AFMO' -- New Contract Level will be in prod on 7/1/22
WHEN H.PARENT_LVL_NUM = '11' THEN 'AGENT-LICENSE ONLY' -- New Contract Level will be in prod on 7/1/22
--New levels added for SGD Reporting, 2/13/2024
WHEN H.PARENT_LVL_NUM = '12' THEN 'RFMO'
WHEN H.PARENT_LVL_NUM = '13' THEN 'NFMO'
WHEN H.PARENT_LVL_NUM = '14' THEN 'SGA2'
ELSE H.PARENT_LVL_NUM
END AS PARENT_LEVEL,
H.LOAD_DTTS,
H.LASTUPDT_DTTS
FROM TRXHUB_CORE_V.Broker_Sircon_producer_Hierarchy as H
LEFT JOIN LU AS LU1 ON (H.PDCR_CD = LU1.PDCR_CD)
LEFT JOIN LU AS LU2 on (H.PARENT_PDCR_CD = LU2.PDCR_CD)
-- MAPD Integration into Sircon was 7/15/2014, some affinity partner hierarchies were carried over from PDP
WHERE (H.AGRMT_END_DT >= '2014-07-15') --this is the 1/12/2022 change MR
QUALIFY ROW_NUMBER() OVER (PARTITION BY H.PDCR_CD, H.AGRMT_ID ORDER BY H.LOAD_DTTS desc, H.LASTUPDT_DTTS DESC) = 1
) WITH DATA PRIMARY INDEX (PDCR_CD) ON COMMIT PRESERVE ROWS
;

COLLECT STATS COLUMN (PDCR_CD,AGRMT_END_DT,AGRMT_EFF_DT,AGRMT_ID,LOAD_DTTS) ON Hier;

--Exclude agreements where End Date is 1 day after Begin Date
/* Sometimes this is the only way Contractng is able to fix Recruiter errors. The Agent signs a hierarchy form
which outlines the hierarchical relationship the agent is agreeing to. Sometimes the Recruiter creates a hierarchical
relationship in the system that does not align to that form. Once the unsupported hierarchy feeds to other systems,
it cannot be deleted or directly updated. Contracting has to terminate the unsupported hierarchy and create a new
hierarchy that matches the hierarchy form. */
CREATE MULTISET VOLATILE TABLE AHier AS (
Select *
From Hier
where (AGRMT_END_DT > AGRMT_EFF_DT + 1 )
QUALIFY ROW_NUMBER() OVER (PARTITION BY AGRMT_ID ORDER BY LOAD_DTTS DESC) = 1
) WITH DATA PRIMARY INDEX (PDCR_CD) ON COMMIT PRESERVE ROWS
;

COLLECT STATS COLUMN (PDCR_CD,PARENT_PDCR_CD,AGENCY_ID,AGRMT_EFF_DT,AGRMT_END_DT,AGRMT_ID) ON AHier;

--11/27/2024 Agent hierarchy to be defined by PDCR_CD to PARENT_PDCR_CD relationship instead of agent ID to agent affiliation ID
--Remove duplicates on AGRMT_EFF_DT due to history data in OSS
CREATE MULTISET VOLATILE TABLE AHier_PDCR_BY_AFF_DT AS (
Select *
From AHier
QUALIFY ROW_NUMBER() OVER (PARTITION BY PDCR_CD, AGRMT_EFF_DT ORDER BY LOAD_DTTS DESC, LASTUPDT_DTTS DESC) = 1
) WITH DATA PRIMARY INDEX (PDCR_CD) ON COMMIT PRESERVE ROWS
;

COLLECT STATS COLUMN (PDCR_CD,PARENT_PDCR_CD,AGENCY_ID,AGRMT_EFF_DT,AGRMT_END_DT,AGRMT_ID) ON AHier_PDCR_BY_AFF_DT;

--Remove duplicates on AGRMT_END_DT due to history data in OSS
CREATE MULTISET VOLATILE TABLE AHier_PDCR_BY_END_DT AS (
Select *
From AHier_PDCR_BY_AFF_DT
QUALIFY ROW_NUMBER() OVER (PARTITION BY PDCR_CD, AGRMT_END_DT ORDER BY LOAD_DTTS DESC, LASTUPDT_DTTS DESC) = 1
) WITH DATA PRIMARY INDEX (PDCR_CD) ON COMMIT PRESERVE ROWS
;

COLLECT STATS COLUMN (PDCR_CD,PARENT_PDCR_CD,AGENCY_ID,AGRMT_EFF_DT,AGRMT_END_DT,AGRMT_ID) ON AHier_PDCR_BY_END_DT;

--Region NEW get Channel for Employees from User Record in Salesforce
/*
This is new and need to be incorporated to replace the employee channel logic used before
If the channel for an employee is wrong, the Sales organization can update the agent's Contact or
User record in Salesforce. Once that update flows to OSS, the SalesChannel on AAH will be updated

CREATE MULTISET VOLATILE TABLE SFDC_EEChannel AS (
Select
C.AGENT_WRITING_ID__C as Agent_ID,
C.NAME_RW as Agent_Name,
C.AGENT_SUB_TYPE__C as Agent_Type,
U.Title_RW as Agent_Title,
case when U.Title_RW like '%Broker Sales Rep%' then 'BSR'
else case when C.AGENT_SUB_TYPE__C = 'Seasonal TeleSales' then 'TeleSales'
else case when C.AGENT_SUB_TYPE__C = 'Seasonal Field' then 'Field'
else C.AGENT_SUB_TYPE__C end end end as Agent_Role_D,
C.VLOCITY_INS__NPNNUMBER__C as Agent_NPN,
C.PRODUCER_CODE__C as Producer_Code,
C.SIRCON_AGENT_ID__C
from SALES_COMMISSION_CORE_V.SFDC_Contact as C
left join SALES_COMMISSION_CORE_V.SFDC_User as U on (C.VLOCITY_INS__USERID__C = U.ID)
Where C.RECORDTYPEID = '0121U000000lP9lQAE'
and C.SIRCON_AGENT_ID__C like '6%' --Cigna Employees are assigned to the 6000 series
) WITH DATA PRIMARY INDEX (Agent_ID) ON COMMIT PRESERVE ROWS
;
*/

--END Region




--Region Employee Channel points to old manual goals tables

--Get known Employee channel from AGENT Goals table
CREATE MULTISET VOLATILE TABLE EEChan AS (
SELECT DISTINCT A.PDCR_CD, A.AGENCY_ID as AGENT_ID, A.AGRMT_EFF_DT, A.AGRMT_END_DT,
EE.CHANNEL AS EE_CHANNEL, '1' AS PRIORITY
From AHIER as A
JOIN (select distinct G."Agent ID" as Agent_ID, G.Channel, MIN (G."Add Date") AS ADD_DATE
From BUSINESS_OPS_CORE_V.SALES_GOALS_AGENTS as G
GROUP BY G."Agent ID", G.Channel ) as EE
on (A.AGENCY_ID = EE.AGENT_ID) AND (A.AGRMT_EFF_DT < EE.ADD_DATE) AND (A.AGRMT_END_DT > EE.ADD_DATE)
Where A.PARENT_PDCR_CD in ('435449', '435450')
) WITH DATA PRIMARY INDEX (AGENT_ID) ON COMMIT PRESERVE ROWS
;

COLLECT STATS COLUMN (PDCR_CD,AGENT_ID,AGRMT_EFF_DT,AGRMT_END_DT,PRIORITY) ON EEChan;

--Add BSR channel from BSR goals table
INSERT INTO EEChan
SELECT DISTINCT A.PDCR_CD, A.AGENCY_ID AS AGENT_ID, A.AGRMT_EFF_DT, A.AGRMT_END_DT,
EE.CHANNEL AS EE_CHANNEL, '1' AS PRIORITY
From AHIER as A
Join (select distinct B."Agent ID" as Agent_ID, 'BSR' as Channel, MIN (B."Add Date") AS ADD_DATE
From BUSINESS_OPS_CORE_V.SALES_GOALS_BSR as B
GROUP BY B."Agent ID", B.Channel ) as EE
on (A.AGENCY_ID = EE.AGENT_ID) AND (A.AGRMT_EFF_DT < EE.ADD_DATE) AND (A.AGRMT_END_DT > EE.ADD_DATE)
Where A.PARENT_PDCR_CD in ('435449', '435450')
;

--Derive Channel by appointment count
CREATE MULTISET VOLATILE TABLE DerChan AS (
Select
Apts.PDCR_CD, Hier.Agency_ID AS AGENT_ID, HIER.AGRMT_EFF_DT, HIER.AGRMT_END_DT,
Case when "Appt St Count" < 10 then 'Field' else 'Telesales' end as Likely_Channel,
count (Apts.ST_CD) as "Appt St Count"
From (Select distinct P.PDCR_CD, P.ST_CD
From TRXHUB_CORE_V.BROKER_SIRCON_PRODUCER_APPOINTMENTS as P) as Apts
Join (Select distinct H.PDCR_CD, H.Agency_ID, H.AGRMT_EFF_DT, H.AGRMT_END_DT
From AHIER as H
Where H.PARENT_PDCR_CD in ('435449', '435450') ) as Hier
on (Apts.PDCR_CD = Hier.PDCR_CD)
Group by Apts.PDCR_CD, Hier.Agency_ID, HIER.AGRMT_EFF_DT, HIER.AGRMT_END_DT
) WITH DATA PRIMARY INDEX (AGENT_ID) ON COMMIT PRESERVE ROWS
;

COLLECT STATS COLUMN (AGENT_ID) ON DerChan;

--Add derived channel to EEChan
INSERT INTO EEChan
Select PDCR_CD, AGENT_ID, AGRMT_EFF_DT, AGRMT_END_DT, LIKELY_CHANNEL AS EE_CHANNEL, '2' AS PRIORITY
From DerChan
;

--use known channel before derived channel
CREATE MULTISET VOLATILE TABLE EEChan2 AS (
SELECT DISTINCT N.PDCR_CD, N.AGENT_ID, N.AGRMT_EFF_DT, N.AGRMT_END_DT, EE_CHANNEL
FROM EECHAN AS N
QUALIFY ROW_NUMBER() OVER (PARTITION BY N.PDCR_CD, N.AGENT_ID, N.AGRMT_EFF_DT, N.AGRMT_END_DT ORDER BY N.PRIORITY) = 1
) WITH DATA PRIMARY INDEX (AGENT_ID) ON COMMIT PRESERVE ROWS
;

COLLECT STATS COLUMN (AGENT_ID) ON EEChan2;

--End Region


--Hierarchy tiers
CREATE MULTISET VOLATILE TABLE BHier AS (
Select Distinct
--Agent Information
A.Agent_Name,
A.AGENT_PDCR_CD,
A.Agent_AgentID AS AGENT_ID,
H1.SIRCON_AGENT_ID,
A.Agent_NPN AS NPN,
A.PDCR_EFF_DT AS AGENT_EFF_DT,
A.PDCR_TERM_DT AS AGENT_TERM_DT,
H1.PDCR_LVL_NUM AS AGT_LVL_NUM,
H1.PDCR_LEVEL AS AGENT_LEVEL,
H1.AGRMT_ID,
H1.AFLTN_AGRMT_ID,
H1.AGRMT_EFF_DT,
H1.AGRMT_END_DT,
--first tier up from agent
H1.PARENT_NAME AS T1_NAME,
cast(null as varchar(100)) AS T1_AGENCY_ID,
H1.PARENT_LVL_NUM AS T1_LVL_NUM,
H1.PARENT_LEVEL AS T1_LVL,
H1.PARENT_PDCR_CD AS T1_PDCR_CD,
cast(null as varchar(100)) AS T1_SIRCON_AGENT_ID,
cast(null as varchar(100)) AS T1_AGRMT_EFF_DT,
cast(null as varchar(100)) AS T1_AGRMT_END_DT,
cast(null as varchar(100)) AS T1_AFLTN_AGRMT_ID,
--second tier up from agent
cast(null as varchar(100)) AS T2_NAME,
cast(null as varchar(100)) AS T2_AGENCY_ID,
cast(null as varchar(100)) AS T2_LVL_NUM,
cast(null as varchar(100)) AS T2_LVL,
cast(null as varchar(100)) AS T2_PDCR_CD,
cast(null as varchar(100)) AS T2_SIRCON_AGENT_ID,
cast(null as varchar(100)) AS T2_AGRMT_EFF_DT,
cast(null as varchar(100)) AS T2_AGRMT_END_DT,
cast(null as varchar(100)) AS T2_AFLTN_AGRMT_ID,
--third tier up from agent
cast(null as varchar(100)) AS T3_NAME,
cast(null as varchar(100)) AS T3_AGENCY_ID,
cast(null as varchar(100)) AS T3_LVL_NUM,
cast(null as varchar(100)) AS T3_LVL,
cast(null as varchar(100)) AS T3_PDCR_CD,
cast(null as varchar(100)) AS T3_SIRCON_AGENT_ID,
cast(null as varchar(100)) AS T3_AGRMT_EFF_DT,
cast(null as varchar(100)) AS T3_AGRMT_END_DT,
cast(null as varchar(100)) AS T3_AFLTN_AGRMT_ID,
--fourth tier up from agent
cast(null as varchar(100)) AS T4_NAME,
cast(null as varchar(100)) AS T4_AGENCY_ID,
cast(null as varchar(100)) AS T4_LVL_NUM,
cast(null as varchar(100)) AS T4_LVL,
cast(null as varchar(100)) AS T4_PDCR_CD,
cast(null as varchar(100)) AS T4_SIRCON_AGENT_ID,
cast(null as varchar(100)) AS T4_AGRMT_EFF_DT,
cast(null as varchar(100)) AS T4_AGRMT_END_DT,
cast(null as varchar(100)) AS T4_AFLTN_AGRMT_ID,
--fifth tier up from agent
cast(null as varchar(100)) AS T5_NAME,
cast(null as varchar(100)) AS T5_AGENCY_ID,
cast(null as varchar(100)) AS T5_LVL_NUM,
cast(null as varchar(100)) AS T5_LVL,
cast(null as varchar(100)) AS T5_PDCR_CD,
cast(null as varchar(100)) AS T5_SIRCON_AGENT_ID,
cast(null as varchar(100)) AS T5_AGRMT_EFF_DT,
cast(null as varchar(100)) AS T5_AGRMT_END_DT,
cast(null as varchar(100)) AS T5_AFLTN_AGRMT_ID,
--sixth tier up from agent
cast(null as varchar(100)) AS T6_NAME,
cast(null as varchar(100)) AS T6_AGENCY_ID,
cast(null as varchar(100)) AS T6_LVL_NUM,
cast(null as varchar(100)) AS T6_LVL,
cast(null as varchar(100)) AS T6_PDCR_CD,
cast(null as varchar(100)) AS T6_SIRCON_AGENT_ID,
cast(null as varchar(100)) AS T6_AGRMT_EFF_DT,
cast(null as varchar(100)) AS T6_AGRMT_END_DT,
cast(null as varchar(100)) AS T6_AFLTN_AGRMT_ID,
--New levels added for SGD Reporting, 2/13/2024
--seventh tier up from agent
cast(null as varchar(100)) AS T7_NAME,
cast(null as varchar(100)) AS T7_AGENCY_ID,
cast(null as varchar(100)) AS T7_LVL_NUM,
cast(null as varchar(100)) AS T7_LVL,
cast(null as varchar(100)) AS T7_PDCR_CD,
cast(null as varchar(100)) AS T7_SIRCON_AGENT_ID,
cast(null as varchar(100)) AS T7_AGRMT_EFF_DT,
cast(null as varchar(100)) AS T7_AGRMT_END_DT,
cast(null as varchar(100)) AS T7_AFLTN_AGRMT_ID,
--8th tier up from agent
cast(null as varchar(100)) AS T8_NAME,
cast(null as varchar(100)) AS T8_AGENCY_ID,
cast(null as varchar(100)) AS T8_LVL_NUM,
cast(null as varchar(100)) AS T8_LVL,
cast(null as varchar(100)) AS T8_PDCR_CD,
cast(null as varchar(100)) AS T8_SIRCON_AGENT_ID,
cast(null as varchar(100)) AS T8_AGRMT_EFF_DT,
cast(null as varchar(100)) AS T8_AGRMT_END_DT,
cast(null as varchar(100)) AS T8_AFLTN_AGRMT_ID,
--9th tier up from agent
cast(null as varchar(100)) AS T9_NAME,
cast(null as varchar(100)) AS T9_AGENCY_ID,
cast(null as varchar(100)) AS T9_LVL_NUM,
cast(null as varchar(100)) AS T9_LVL,
cast(null as varchar(100)) AS T9_PDCR_CD,
cast(null as varchar(100)) AS T9_SIRCON_AGENT_ID,
cast(null as varchar(100)) AS T9_AGRMT_EFF_DT,
cast(null as varchar(100)) AS T9_AGRMT_END_DT,
cast(null as varchar(100)) AS T9_AFLTN_AGRMT_ID
From temp_BROKER_SIRCON_AGENT A
--HSLABCUSTANALYTICS.BROKER_SIRCON_Agent as A
LEFT Join AHier as H1 ON (A.Agent_PDCR_CD = H1.PDCR_CD)
--LEFT JOIN AHIER AS H2 ON (H1.AFLTN_AGRMT_ID = H2.AGRMT_ID)
--LEFT JOIN AHIER AS H3 ON (H2.AFLTN_AGRMT_ID = H3.AGRMT_ID)
--LEFT JOIN AHIER AS H4 ON (H3.AFLTN_AGRMT_ID = H4.AGRMT_ID)
--LEFT JOIN AHIER AS H5 ON (H4.AFLTN_AGRMT_ID = H5.AGRMT_ID)
--LEFT JOIN AHIER AS H6 ON (H5.AFLTN_AGRMT_ID = H6.AGRMT_ID)
--LEFT JOIN AHIER AS H7 ON (H6.AFLTN_AGRMT_ID = H7.AGRMT_ID)
Where (a.FIRM_IND = 'I') -- Individuals
and (A.Agent_AgentID <> 'A390470') --should not be in sircon & sircon record is incomplete. Complete Agent Issue record info added later in this script
and (A.Agent_NPN > '1') --NPN populated by sync with NIPR PDB. No NPN means record can't sync which means invalid SSN. Can't do background check, can't appoint. Unusable record.
) WITH DATA PRIMARY INDEX (Agent_ID) ON COMMIT PRESERVE ROWS
;

COLLECT STATS COLUMN (Agent_ID) ON BHier;

--11/27/2024 Agent hierarchy to be defined by PDCR_CD to PARENT_PDCR_CD relationship instead of agent ID to agent affiliation ID: Replace Ahier with AHier_PDCR_BY_END_DT and update join conditions.
--update for first tier up from agent
UPDATE BHier
from AHier_PDCR_BY_END_DT H2
SET
T2_NAME=PARENT_NAME , ---testing
T1_AGENCY_ID=H2.AGENCY_ID ,
T2_LVL_NUM=PARENT_LVL_NUM , --testing
T2_LVL=PARENT_LEVEL ,--testing
T2_PDCR_CD=PARENT_PDCR_CD , ---testing
T1_SIRCON_AGENT_ID=H2.SIRCON_AGENT_ID ,
T1_AGRMT_EFF_DT=H2.AGRMT_EFF_DT ,
T1_AGRMT_END_DT=H2.AGRMT_END_DT ,
T1_AFLTN_AGRMT_ID=H2.AFLTN_AGRMT_ID
WHERE --BHier.AFLTN_AGRMT_ID = H2.AGRMT_ID
BHier.T1_PDCR_CD = H2.PDCR_CD
and BHIER.AGRMT_EFF_DT BETWEEN H2.AGRMT_EFF_DT and H2.AGRMT_END_DT;

--second tier up from agent
UPDATE BHier
from AHier_PDCR_BY_END_DT H3
SET
T3_NAME=PARENT_NAME ,--testing
T2_AGENCY_ID=H3.AGENCY_ID ,
T3_LVL_NUM=PARENT_LVL_NUM ,--testing
T3_LVL=PARENT_LEVEL , ---testing
T3_PDCR_CD=PARENT_PDCR_CD ,---testing
T2_SIRCON_AGENT_ID=H3.SIRCON_AGENT_ID ,
T2_AGRMT_EFF_DT=H3.AGRMT_EFF_DT ,
T2_AGRMT_END_DT=H3.AGRMT_END_DT ,
T2_AFLTN_AGRMT_ID=H3.AFLTN_AGRMT_ID
WHERE --T1_AFLTN_AGRMT_ID = H3.AGRMT_ID
BHier.T2_PDCR_CD = H3.PDCR_CD
and BHIER.T1_AGRMT_EFF_DT BETWEEN H3.AGRMT_EFF_DT and H3.AGRMT_END_DT;

--third tier up from agent
UPDATE BHier
from AHier_PDCR_BY_END_DT H4
SET
T4_NAME=PARENT_NAME , --testing
T3_AGENCY_ID=H4.AGENCY_ID ,
T4_LVL_NUM=PARENT_LVL_NUM ,--testing
T4_LVL=PARENT_LEVEL ,--testing
T4_PDCR_CD=PARENT_PDCR_CD ,--testing
T3_SIRCON_AGENT_ID=H4.SIRCON_AGENT_ID ,
T3_AGRMT_EFF_DT=H4.AGRMT_EFF_DT ,
T3_AGRMT_END_DT=H4.AGRMT_END_DT ,
T3_AFLTN_AGRMT_ID=H4.AFLTN_AGRMT_ID
WHERE --T2_AFLTN_AGRMT_ID = H4.AGRMT_ID
BHier.T3_PDCR_CD = H4.PDCR_CD
and BHIER.T2_AGRMT_EFF_DT BETWEEN H4.AGRMT_EFF_DT and H4.AGRMT_END_DT;


--Update fourth tier up from agent
UPDATE BHier
from AHier_PDCR_BY_END_DT H5
SET
T5_NAME=PARENT_NAME ,--testing
T4_AGENCY_ID=H5.AGENCY_ID ,
T5_LVL_NUM=PARENT_LVL_NUM ,--testing
T5_LVL=PARENT_LEVEL ,--testing
T5_PDCR_CD=PARENT_PDCR_CD ,--testing
T4_SIRCON_AGENT_ID=H5.SIRCON_AGENT_ID ,
T4_AGRMT_EFF_DT=H5.AGRMT_EFF_DT ,
T4_AGRMT_END_DT=H5.AGRMT_END_DT ,
T4_AFLTN_AGRMT_ID=H5.AFLTN_AGRMT_ID
WHERE --T3_AFLTN_AGRMT_ID = H5.AGRMT_ID
BHier.T4_PDCR_CD = H5.PDCR_CD
and BHIER.T3_AGRMT_EFF_DT BETWEEN H5.AGRMT_EFF_DT and H5.AGRMT_END_DT;

--fifth tier up from agent
UPDATE BHier
from AHier_PDCR_BY_END_DT H6
SET
T6_NAME=PARENT_NAME ,--testing
T5_AGENCY_ID=H6.AGENCY_ID ,
T6_LVL_NUM=PARENT_LVL_NUM ,--testing
T6_LVL=PARENT_LEVEL ,--testing
T6_PDCR_CD=PARENT_PDCR_CD ,--testing
T5_SIRCON_AGENT_ID=H6.SIRCON_AGENT_ID ,
T5_AGRMT_EFF_DT=H6.AGRMT_EFF_DT ,
T5_AGRMT_END_DT=H6.AGRMT_END_DT ,
T5_AFLTN_AGRMT_ID=H6.AFLTN_AGRMT_ID
WHERE --T4_AFLTN_AGRMT_ID = H6.AGRMT_ID
BHier.T5_PDCR_CD = H6.PDCR_CD
and BHIER.T4
_AGRMT_EFF_DT BETWEEN H6.AGRMT_EFF_DT and H6.AGRMT_END_DT;

--New levels added for SGD Reporting, 2/13/2024

--sixth tier up from agent
/* UPDATE BHier
from AHier H7
SET
--T6_NAME=PARENT_NAME ,
T6_AGENCY_ID=H7.AGENCY_ID ,
-- T6_LVL_NUM=PARENT_LVL_NUM ,
--T6_LVL=PARENT_LEVEL ,
--T6_PDCR_CD=PARENT_PDCR_CD ,
T6_SIRCON_AGENT_ID=H7.SIRCON_AGENT_ID ,
T6_AGRMT_EFF_DT=H7.AGRMT_EFF_DT ,
T6_AGRMT_END_DT=H7.AGRMT_END_DT ,
T6_AFLTN_AGRMT_ID=H7.AFLTN_AGRMT_ID
WHERE T5_AFLTN_AGRMT_ID = H7.AGRMT_ID;*/

UPDATE BHier
from AHier_PDCR_BY_END_DT H7
SET
T7_NAME=PARENT_NAME ,
T6_AGENCY_ID=H7.AGENCY_ID ,
T7_LVL_NUM=PARENT_LVL_NUM ,
T7_LVL=PARENT_LEVEL ,
T7_PDCR_CD=PARENT_PDCR_CD ,
T6_SIRCON_AGENT_ID=H7.SIRCON_AGENT_ID ,
T6_AGRMT_EFF_DT=H7.AGRMT_EFF_DT ,
T6_AGRMT_END_DT=H7.AGRMT_END_DT ,
T6_AFLTN_AGRMT_ID=H7.AFLTN_AGRMT_ID
WHERE --T5_AFLTN_AGRMT_ID = H7.AGRMT_ID
BHier.T6_PDCR_CD = H7.PDCR_CD
and BHIER.T5_AGRMT_EFF_DT BETWEEN H7.AGRMT_EFF_DT and H7.AGRMT_END_DT;

--7th tier up from agent
/* UPDATE BHier
from AHier H8
SET
--T7_NAME=PARENT_NAME ,
T7_AGENCY_ID=H8.AGENCY_ID ,
-- T7_LVL_NUM=PARENT_LVL_NUM ,
--T7_LVL=PARENT_LEVEL ,
--T7_PDCR_CD=PARENT_PDCR_CD ,
T7_SIRCON_AGENT_ID=H8.SIRCON_AGENT_ID ,
T7_AGRMT_EFF_DT=H8.AGRMT_EFF_DT ,
T7_AGRMT_END_DT=H8.AGRMT_END_DT ,
T7_AFLTN_AGRMT_ID=H8.AFLTN_AGRMT_ID
WHERE T6_AFLTN_AGRMT_ID = H8.AGRMT_ID;*/

UPDATE BHier
from AHier_PDCR_BY_END_DT H8
SET
T8_NAME=PARENT_NAME ,
T7_AGENCY_ID=H8.AGENCY_ID ,
T8_LVL_NUM=PARENT_LVL_NUM ,
T8_LVL=PARENT_LEVEL ,
T8_PDCR_CD=PARENT_PDCR_CD ,
T7_SIRCON_AGENT_ID=H8.SIRCON_AGENT_ID ,
T7_AGRMT_EFF_DT=H8.AGRMT_EFF_DT ,
T7_AGRMT_END_DT=H8.AGRMT_END_DT ,
T7_AFLTN_AGRMT_ID=H8.AFLTN_AGRMT_ID
WHERE --T6_AFLTN_AGRMT_ID = H8.AGRMT_ID
BHier.T7_PDCR_CD = H8.PDCR_CD
and BHIER.T6_AGRMT_EFF_DT BETWEEN H8.AGRMT_EFF_DT and H8.AGRMT_END_DT;

--8th tier up from agent
/* UPDATE BHier
from AHier H9
SET
--T8_NAME=PARENT_NAME ,
T8_AGENCY_ID=H9.AGENCY_ID ,
-- T8_LVL_NUM=PARENT_LVL_NUM ,
--T8_LVL=PARENT_LEVEL ,
--T8_PDCR_CD=PARENT_PDCR_CD ,
T8_SIRCON_AGENT_ID=H9.SIRCON_AGENT_ID ,
T8_AGRMT_EFF_DT=H9.AGRMT_EFF_DT ,
T8_AGRMT_END_DT=H9.AGRMT_END_DT ,
T8_AFLTN_AGRMT_ID=H9.AFLTN_AGRMT_ID
WHERE T7_AFLTN_AGRMT_ID = H9.AGRMT_ID;*/

UPDATE BHier
from AHier_PDCR_BY_END_DT H9
SET
T9_NAME=PARENT_NAME ,
T8_AGENCY_ID=H9.AGENCY_ID ,
T9_LVL_NUM=PARENT_LVL_NUM ,
T9_LVL=PARENT_LEVEL ,
T9_PDCR_CD=PARENT_PDCR_CD ,
T8_SIRCON_AGENT_ID=H9.SIRCON_AGENT_ID ,
T8_AGRMT_EFF_DT=H9.AGRMT_EFF_DT ,
T8_AGRMT_END_DT=H9.AGRMT_END_DT ,
T8_AFLTN_AGRMT_ID=H9.AFLTN_AGRMT_ID
WHERE --T7_AFLTN_AGRMT_ID = H9.AGRMT_ID
BHier.T8_PDCR_CD = H9.PDCR_CD
and BHIER.T7_AGRMT_EFF_DT BETWEEN H9.AGRMT_EFF_DT and H9.AGRMT_END_DT;


--9th tier up from agent
UPDATE BHier
from AHier_PDCR_BY_END_DT H10
SET
--T9_NAME=PARENT_NAME ,
T9_AGENCY_ID=H10.AGENCY_ID ,
-- T9_LVL_NUM=PARENT_LVL_NUM ,
--T9_LVL=PARENT_LEVEL ,
--T9_PDCR_CD=PARENT_PDCR_CD ,
T9_SIRCON_AGENT_ID=H10.SIRCON_AGENT_ID ,
T9_AGRMT_EFF_DT=H10.AGRMT_EFF_DT ,
T9_AGRMT_END_DT=H10.AGRMT_END_DT ,
T9_AFLTN_AGRMT_ID=H10.AFLTN_AGRMT_ID
WHERE --T8_AFLTN_AGRMT_ID = H10.AGRMT_ID
BHier.T9_PDCR_CD = H10.PDCR_CD
and BHIER.T8_AGRMT_EFF_DT BETWEEN H10.AGRMT_EFF_DT and H10.AGRMT_END_DT;

DELETE FROM REPORTING_T.LU_TOPLINE_CHANNEL ALL;
INSERT INTO REPORTING_T.LU_TOPLINE_CHANNEL
select
distinct '1900-01-01' as start_date,
'2099-12-31' as end_date,
EH_Agency_ID as topline_ID,
Topline as topline_name,
Channel,
'Call Center' as "sub channel",
"topline category" as topline_category
FROM BUSINESS_OPS_CORE_V.BROKER_TOPLINE_SS
WHERE ("topline category" = 'National Call Center' or "topline category" = 'Sale No Tail')
union
select
distinct '1900-01-01' as start_date,
'2099-12-31' as end_date,
EH_Agency_ID as topline_ID,
Topline as topline_name,
'Vendor' as Channel,
'Vendor' as "sub channel",
"topline category" as topline_category
FROM BUSINESS_OPS_CORE_V.BROKER_TOPLINE_SS
WHERE ("topline category" = 'Vendor')
union
select
distinct '1900-01-01' as start_date,
'2099-12-31' as end_date,
EH_Agency_ID as topline_ID,
Topline as topline_name,
'Exchange' as Channel,
'Exchange' as "sub channel",
"topline category" as topline_category
FROM BUSINESS_OPS_CORE_V.BROKER_TOPLINE_SS
WHERE ("topline category" = 'Exchange');

--Organized into level groupings
CREATE MULTISET VOLATILE TABLE CHier AS (
SELECT
cast ('Sircon' as varchar(30)) AS Source,
B.AGENT_NAME,
B.AGENT_ID,
B.AGENT_PDCR_CD,
B.SIRCON_AGENT_ID,
B.NPN,
B.AGENT_EFF_DT AS AGENT_EFFECTIVE_DATE,
B.AGENT_TERM_DT AS AGENT_TERMINATION_DATE,
B.AGENT_LEVEL,
B.AGRMT_ID,
B.AGRMT_EFF_DT AS AGREEMENT_EFFECTIVE_DATE,
B.AGRMT_END_DT AS AGREEMENT_END_DATE,
--DIRECT UPLINE
B.T1_LVL AS DIRECT_UPLINE_ROLE,
B.T1_NAME AS DIRECT_UPLINE_NAME,
B.T1_AGENCY_ID AS DIRECT_UPLINE_AGENCY_ID,
B.T1_PDCR_CD AS DIRECT_UPLINE_PDCR_CD,
B.T1_SIRCON_AGENT_ID AS DIRECT_UPLINE_SIRCON_AGENT_ID,
B.T1_AGRMT_EFF_DT AS DIRECT_UPLINE_AGREEMENT_EFFECTIVE_DATE,
B.T1_AGRMT_END_DT AS DIRECT_UPLINE_AGREEMENT_END_DATE,
--PBE PERSONAL BUSINESS ENTITY
CASE WHEN B.T1_LVL_NUM = '5' THEN B.T1_LVL ELSE NULL END AS PBE_ROLE,
CASE WHEN B.T1_LVL_NUM = '5' THEN B.T1_NAME ELSE NULL END AS PBE_NAME,
CASE WHEN B.T1_LVL_NUM = '5' THEN B.T1_AGENCY_ID ELSE NULL END AS PBE_AGENCY_ID,
CASE WHEN B.T1_LVL_NUM = '5' THEN B.T1_PDCR_CD ELSE NULL END AS PBE_PDCR_CD,
CASE WHEN B.T1_LVL_NUM = '5' THEN B.T1_SIRCON_AGENT_ID ELSE NULL END AS PBE_SIRCON_AGENT_ID,
CASE WHEN B.T1_LVL_NUM = '5' THEN B.T1_AGRMT_EFF_DT ELSE NULL END AS PBE_AGREEMENT_EFFECTIVE_DATE,
CASE WHEN B.T1_LVL_NUM = '5' THEN B.T1_AGRMT_END_DT ELSE NULL END AS PBE_AGREEMENT_END_DATE,
--GA GENERAL AGENCY
CASE WHEN B.T2_LVL_NUM = '4' THEN B.T2_LVL
ELSE CASE WHEN B.T1_LVL_NUM = '4' THEN B.T1_LVL
ELSE NULL END END AS GA_ROLE,
CASE WHEN B.T2_LVL_NUM = '4' THEN B.T2_NAME
ELSE CASE WHEN B.T1_LVL_NUM = '4' THEN B.T1_NAME
ELSE NULL END END AS GA_NAME,
CASE WHEN B.T2_LVL_NUM = '4' THEN B.T2_AGENCY_ID
ELSE CASE WHEN B.T1_LVL_NUM = '4' THEN B.T1_AGENCY_ID
ELSE NULL END END AS GA_ID,
CASE WHEN B.T2_LVL_NUM = '4' THEN B.T2_PDCR_CD
ELSE CASE WHEN B.T1_LVL_NUM = '4' THEN B.T1_PDCR_CD
ELSE NULL END END AS GA_PDCR_CD,
CASE WHEN B.T2_LVL_NUM = '4' THEN B.T2_SIRCON_AGENT_ID
ELSE CASE WHEN B.T1_LVL_NUM = '4' THEN B.T1_SIRCON_AGENT_ID
ELSE NULL END END AS GA_SIRCON_AGENT_ID,
CASE WHEN B.T2_LVL_NUM = '4' THEN B.T2_AGRMT_EFF_DT
ELSE CASE WHEN B.T1_LVL_NUM = '4' THEN B.T1_AGRMT_EFF_DT
ELSE NULL END END AS GA_AGREEMENT_EFFECTIVE_DATE,
CASE WHEN B.T2_LVL_NUM = '4' THEN B.T2_AGRMT_END_DT
ELSE CASE WHEN B.T1_LVL_NUM = '4' THEN B.T1_AGRMT_END_DT
ELSE NULL END END AS GA_AGREEMENT_END_DATE,
--MGA MANAGING GENERAL AGENCY
CASE WHEN B.T3_LVL_NUM = '3' THEN B.T3_LVL
ELSE CASE WHEN B.T2_LVL_NUM = '3' THEN B.T2_LVL
ELSE CASE WHEN B.T1_LVL_NUM = '3' THEN B.T1_LVL
ELSE NULL END END END AS MGA_ROLE,
CASE WHEN B.T3_LVL_NUM = '3' THEN B.T3_NAME
ELSE CASE WHEN B.T2_LVL_NUM = '3' THEN B.T2_NAME
ELSE CASE WHEN B.T1_LVL_NUM = '3' THEN B.T1_NAME
ELSE NULL END END END AS MGA_NAME,
CASE WHEN B.T3_LVL_NUM = '3' THEN B.T3_AGENCY_ID
ELSE CASE WHEN B.T2_LVL_NUM = '3' THEN B.T2_AGENCY_ID
ELSE CASE WHEN B.T1_LVL_NUM = '3' THEN B.T1_AGENCY_ID
ELSE NULL END END END AS MGA_ID,
CASE WHEN B.T3_LVL_NUM = '3' THEN B.T3_PDCR_CD
ELSE CASE WHEN B.T2_LVL_NUM = '3' THEN B.T2_PDCR_CD
ELSE CASE WHEN B.T1_LVL_NUM = '3' THEN B.T1_PDCR_CD
ELSE NULL END END END AS MGA_PDCR_CD,
CASE WHEN B.T3_LVL_NUM = '3' THEN B.T3_SIRCON_AGENT_ID
ELSE CASE WHEN B.T2_LVL_NUM = '3' THEN B.T2_SIRCON_AGENT_ID
ELSE CASE WHEN B.T1_LVL_NUM = '3' THEN B.T1_SIRCON_AGENT_ID
ELSE NULL END END END AS MGA_SIRCON_AGENT_ID,
CASE WHEN B.T3_LVL_NUM = '3' THEN B.T3_AGRMT_EFF_DT
ELSE CASE WHEN B.T2_LVL_NUM = '3' THEN B.T2_AGRMT_EFF_DT
ELSE CASE WHEN B.T1_LVL_NUM = '3' THEN B.T1_AGRMT_EFF_DT
ELSE NULL END END END AS MGA_AGREEMENT_EFFECTIVE_DATE,
CASE WHEN B.T3_LVL_NUM = '3' THEN B.T3_AGRMT_END_DT
ELSE CASE WHEN B.T2_LVL_NUM = '3' THEN B.T2_AGRMT_END_DT
ELSE CASE WHEN B.T1_LVL_NUM = '3' THEN B.T1_AGRMT_END_DT
ELSE NULL END END END AS MGA_AGREEMENT_END_DATE,
--SGA SUPERVISING GENERAL AGENCY
CASE WHEN B.T4_LVL_NUM = '2' THEN B.T4_LVL
ELSE CASE WHEN B.T3_LVL_NUM = '2' THEN B.T3_LVL
ELSE CASE WHEN B.T2_LVL_NUM = '2' THEN B.T2_LVL
ELSE CASE WHEN B.T1_LVL_NUM = '2' THEN B.T1_LVL
ELSE NULL END END END END AS SGA_ROLE,
CASE WHEN B.T4_LVL_NUM = '2' THEN B.T4_NAME
ELSE CASE WHEN B.T3_LVL_NUM = '2' THEN B.T3_NAME
ELSE CASE WHEN B.T2_LVL_NUM = '2' THEN B.T2_NAME
ELSE CASE WHEN B.T1_LVL_NUM = '2' THEN B.T1_NAME
ELSE NULL END END END END AS SGA_NAME,
CASE WHEN B.T4_LVL_NUM = '2' THEN B.T4_AGENCY_ID
ELSE CASE WHEN B.T3_LVL_NUM = '2' THEN B.T3_AGENCY_ID
ELSE CASE WHEN B.T2_LVL_NUM = '2' THEN B.T2_AGENCY_ID
ELSE CASE WHEN B.T1_LVL_NUM = '2' THEN B.T1_AGENCY_ID
ELSE NULL END END END END AS SGA_ID,
CASE WHEN B.T4_LVL_NUM = '2' THEN B.T4_PDCR_CD
ELSE CASE WHEN B.T3_LVL_NUM = '2' THEN B.T3_PDCR_CD
ELSE CASE WHEN B.T2_LVL_NUM = '2' THEN B.T2_PDCR_CD
ELSE CASE WHEN B.T1_LVL_NUM = '2' THEN B.T1_PDCR_CD
ELSE NULL END END END END AS SGA_PDCR_CD,
CASE WHEN B.T4_LVL_NUM = '2' THEN B.T4_SIRCON_AGENT_ID
ELSE CASE WHEN B.T3_LVL_NUM = '2' THEN B.T3_SIRCON_AGENT_ID
ELSE CASE WHEN B.T2_LVL_NUM = '2' THEN B.T2_SIRCON_AGENT_ID
ELSE CASE WHEN B.T1_LVL_NUM = '2' THEN B.T1_SIRCON_AGENT_ID
ELSE NULL END END END END AS SGA_SIRCON_AGENT_ID,
CASE WHEN B.T4_LVL_NUM = '2' THEN B.T4_AGRMT_EFF_DT
ELSE CASE WHEN B.T3_LVL_NUM = '2' THEN B.T3_AGRMT_EFF_DT
ELSE CASE WHEN B.T2_LVL_NUM = '2' THEN B.T2_AGRMT_EFF_DT
ELSE CASE WHEN B.T1_LVL_NUM = '2' THEN B.T1_AGRMT_EFF_DT
ELSE NULL END END END END AS SGA_AGREEMENT_EFFECTIVE_DATE,
CASE WHEN B.T4_LVL_NUM = '2' THEN B.T4_AGRMT_END_DT
ELSE CASE WHEN B.T3_LVL_NUM = '2' THEN B.T3_AGRMT_END_DT
ELSE CASE WHEN B.T2_LVL_NUM = '2' THEN B.T2_AGRMT_END_DT
ELSE CASE WHEN B.T1_LVL_NUM = '2' THEN B.T1_AGRMT_END_DT
ELSE NULL END END END END AS SGA_AGREEMENT_END_DATE,
--SGA2 Supervising General Agency 2
CASE WHEN B.T5_LVL_NUM = '14' THEN B.T5_LVL
ELSE CASE WHEN B.T4_LVL_NUM = '14' THEN B.T4_LVL
ELSE CASE WHEN B.T3_LVL_NUM = '14' THEN B.T3_LVL
ELSE CASE WHEN B.T2_LVL_NUM = '14' THEN B.T2_LVL
ELSE CASE WHEN B.T1_LVL_NUM = '14' THEN B.T1_LVL
ELSE NULL END END END END END AS SGA2_ROLE,
CASE WHEN B.T5_LVL_NUM = '14' THEN B.T5_NAME
ELSE CASE WHEN B.T4_LVL_NUM = '14' THEN B.T4_NAME
ELSE CASE WHEN B.T3_LVL_NUM = '14' THEN B.T3_NAME
ELSE CASE WHEN B.T2_LVL_NUM = '14' THEN B.T2_NAME
ELSE CASE WHEN B.T1_LVL_NUM = '14' THEN B.T1_NAME
ELSE NULL END END END END END AS SGA2_NAME,
CASE WHEN B.T5_LVL_NUM = '14' THEN B.T5_AGENCY_ID
ELSE CASE WHEN B.T4_LVL_NUM = '14' THEN B.T4_AGENCY_ID
ELSE CASE WHEN B.T3_LVL_NUM = '14' THEN B.T3_AGENCY_ID
ELSE CASE WHEN B.T2_LVL_NUM = '14' THEN B.T2_AGENCY_ID
ELSE CASE WHEN B.T1_LVL_NUM = '14' THEN B.T1_AGENCY_ID
ELSE NULL END END END END END AS SGA2_ID,
CASE WHEN B.T5_LVL_NUM = '14' THEN B.T5_PDCR_CD
ELSE CASE WHEN B.T4_LVL_NUM = '14' THEN B.T4_PDCR_CD
ELSE CASE WHEN B.T3_LVL_NUM = '14' THEN B.T3_PDCR_CD
ELSE CASE WHEN B.T2_LVL_NUM = '14' THEN B.T2_PDCR_CD
ELSE CASE WHEN B.T1_LVL_NUM = '14' THEN B.T1_PDCR_CD
ELSE NULL END END END END END AS SGA2_PDCR_CD,
CASE WHEN B.T5_LVL_NUM = '14' THEN B.T5_SIRCON_AGENT_ID
ELSE CASE WHEN B.T4_LVL_NUM = '14' THEN B.T4_SIRCON_AGENT_ID
ELSE CASE WHEN B.T3_LVL_NUM = '14' THEN B.T3_SIRCON_AGENT_ID
ELSE CASE WHEN B.T2_LVL_NUM = '14' THEN B.T2_SIRCON_AGENT_ID
ELSE CASE WHEN B.T1_LVL_NUM = '14' THEN B.T1_SIRCON_AGENT_ID
ELSE NULL END END END END END AS SGA2_SIRCON_AGENT_ID,
CASE WHEN B.T5_LVL_NUM = '14' THEN B.T5_AGRMT_EFF_DT
ELSE CASE WHEN B.T4_LVL_NUM = '14' THEN B.T4_AGRMT_EFF_DT
ELSE CASE WHEN B.T3_LVL_NUM = '14' THEN B.T3_AGRMT_EFF_DT
ELSE CASE WHEN B.T2_LVL_NUM = '14' THEN B.T2_AGRMT_EFF_DT
ELSE CASE WHEN B.T1_LVL_NUM = '14' THEN B.T1_AGRMT_EFF_DT
ELSE NULL END END END END END AS SGA2_AGREEMENT_EFFECTIVE_DATE,
CASE WHEN B.T5_LVL_NUM = '14' THEN B.T5_AGRMT_END_DT
ELSE CASE WHEN B.T4_LVL_NUM = '14' THEN B.T4_AGRMT_END_DT
ELSE CASE WHEN B.T3_LVL_NUM = '14' THEN B.T3_AGRMT_END_DT
ELSE CASE WHEN B.T2_LVL_NUM = '14' THEN B.T2_AGRMT_END_DT
ELSE CASE WHEN B.T1_LVL_NUM = '14' THEN B.T1_AGRMT_END_DT
ELSE NULL END END END END END AS SGA2_AGREEMENT_END_DATE,

--FMO FIELD MARKETING ORGANIZATION
CASE WHEN B.T6_LVL_NUM = '0' THEN B.T6_LVL
ELSE CASE WHEN B.T5_LVL_NUM = '0' THEN B.T5_LVL
ELSE CASE WHEN B.T4_LVL_NUM = '0' THEN B.T4_LVL
ELSE CASE WHEN B.T3_LVL_NUM = '0' THEN B.T3_LVL
ELSE CASE WHEN B.T2_LVL_NUM = '0' THEN B.T2_LVL
ELSE CASE WHEN B.T1_LVL_NUM = '0' THEN B.T1_LVL
ELSE NULL END END END END END END AS FMO_ROLE,
CASE WHEN B.T6_LVL_NUM = '0' THEN B.T6_NAME
ELSE CASE WHEN B.T5_LVL_NUM = '0' THEN B.T5_NAME
ELSE CASE WHEN B.T4_LVL_NUM = '0' THEN B.T4_NAME
ELSE CASE WHEN B.T3_LVL_NUM = '0' THEN B.T3_NAME
ELSE CASE WHEN B.T2_LVL_NUM = '0' THEN B.T2_NAME
ELSE CASE WHEN B.T1_LVL_NUM = '0' THEN B.T1_NAME
ELSE NULL END END END END END END AS FMO_NAME,
CASE WHEN B.T6_LVL_NUM = '0' THEN B.T6_AGENCY_ID
ELSE CASE WHEN B.T5_LVL_NUM = '0' THEN B.T5_AGENCY_ID
ELSE CASE WHEN B.T4_LVL_NUM = '0' THEN B.T4_AGENCY_ID
ELSE CASE WHEN B.T3_LVL_NUM = '0' THEN B.T3_AGENCY_ID
ELSE CASE WHEN B.T2_LVL_NUM = '0' THEN B.T2_AGENCY_ID
ELSE CASE WHEN B.T1_LVL_NUM = '0' THEN B.T1_AGENCY_ID
ELSE NULL END END END END END END AS FMO_ID,
CASE WHEN B.T6_LVL_NUM = '0' THEN B.T6_PDCR_CD
ELSE CASE WHEN B.T5_LVL_NUM = '0' THEN B.T5_PDCR_CD
ELSE CASE WHEN B.T4_LVL_NUM = '0' THEN B.T4_PDCR_CD
ELSE CASE WHEN B.T3_LVL_NUM = '0' THEN B.T3_PDCR_CD
ELSE CASE WHEN B.T2_LVL_NUM = '0' THEN B.T2_PDCR_CD
ELSE CASE WHEN B.T1_LVL_NUM = '0' THEN B.T1_PDCR_CD
ELSE NULL END END END END END END AS FMO_PDCR_CD,
CASE WHEN B.T6_LVL_NUM = '0' THEN B.T6_SIRCON_AGENT_ID
ELSE CASE WHEN B.T5_LVL_NUM = '0' THEN B.T5_SIRCON_AGENT_ID
ELSE CASE WHEN B.T4_LVL_NUM = '0' THEN B.T4_SIRCON_AGENT_ID
ELSE CASE WHEN B.T3_LVL_NUM = '0' THEN B.T3_SIRCON_AGENT_ID
ELSE CASE WHEN B.T2_LVL_NUM = '0' THEN B.T2_SIRCON_AGENT_ID
ELSE CASE WHEN B.T1_LVL_NUM = '0' THEN B.T1_SIRCON_AGENT_ID
ELSE NULL END END END END END END AS FMO_SIRCON_AGENT_ID,
CASE WHEN B.T6_LVL_NUM = '0' THEN B.T6_AGRMT_EFF_DT
ELSE CASE WHEN B.T5_LVL_NUM = '0' THEN B.T5_AGRMT_EFF_DT
ELSE CASE WHEN B.T4_LVL_NUM = '0' THEN B.T4_AGRMT_EFF_DT
ELSE CASE WHEN B.T3_LVL_NUM = '0' THEN B.T3_AGRMT_EFF_DT
ELSE CASE WHEN B.T2_LVL_NUM = '0' THEN B.T2_AGRMT_EFF_DT
ELSE CASE WHEN B.T1_LVL_NUM = '0' THEN B.T1_AGRMT_EFF_DT
ELSE NULL END END END END END END AS FMO_AGREEMENT_EFFECTIVE_DATE,
CASE WHEN B.T6_LVL_NUM = '0' THEN B.T6_AGRMT_END_DT
ELSE CASE WHEN B.T5_LVL_NUM = '0' THEN B.T5_AGRMT_END_DT
ELSE CASE WHEN B.T4_LVL_NUM = '0' THEN B.T4_AGRMT_END_DT
ELSE CASE WHEN B.T3_LVL_NUM = '0' THEN B.T3_AGRMT_END_DT
ELSE CASE WHEN B.T2_LVL_NUM = '0' THEN B.T2_AGRMT_END_DT
ELSE CASE WHEN B.T1_LVL_NUM = '0' THEN B.T1_AGRMT_END_DT
ELSE NULL END END END END END END AS FMO_AGREEMENT_END_DATE,

--RFMO REGIONAL FIELD MARKETING ORGANIZATION
CASE WHEN B.T7_LVL_NUM = '12' THEN B.T7_LVL
ELSE CASE WHEN B.T6_LVL_NUM = '12' THEN B.T6_LVL
ELSE CASE WHEN B.T5_LVL_NUM = '12' THEN B.T5_LVL
ELSE CASE WHEN B.T4_LVL_NUM = '12' THEN B.T4_LVL
ELSE CASE WHEN B.T3_LVL_NUM = '12' THEN B.T3_LVL
ELSE CASE WHEN B.T2_LVL_NUM = '12' THEN B.T2_LVL
ELSE CASE WHEN B.T1_LVL_NUM = '12' THEN B.T1_LVL
ELSE NULL END END END END END END END AS RFMO_ROLE,
CASE WHEN B.T7_LVL_NUM = '12' THEN B.T7_NAME
ELSE CASE WHEN B.T6_LVL_NUM = '12' THEN B.T6_NAME
ELSE CASE WHEN B.T5_LVL_NUM = '12' THEN B.T5_NAME
ELSE CASE WHEN B.T4_LVL_NUM = '12' THEN B.T4_NAME
ELSE CASE WHEN B.T3_LVL_NUM = '12' THEN B.T3_NAME
ELSE CASE WHEN B.T2_LVL_NUM = '12' THEN B.T2_NAME
ELSE CASE WHEN B.T1_LVL_NUM = '12' THEN B.T1_NAME
ELSE NULL END END END END END END END AS RFMO_NAME,
CASE WHEN B.T7_LVL_NUM = '12' THEN B.T7_AGENCY_ID
ELSE CASE WHEN B.T6_LVL_NUM = '12' THEN B.T6_AGENCY_ID
ELSE CASE WHEN B.T5_LVL_NUM = '12' THEN B.T5_AGENCY_ID
ELSE CASE WHEN B.T4_LVL_NUM = '12' THEN B.T4_AGENCY_ID
ELSE CASE WHEN B.T3_LVL_NUM = '12' THEN B.T3_AGENCY_ID
ELSE CASE WHEN B.T2_LVL_NUM = '12' THEN B.T2_AGENCY_ID
ELSE CASE WHEN B.T1_LVL_NUM = '12' THEN B.T1_AGENCY_ID
ELSE NULL END END END END END END END AS RFMO_ID,
CASE WHEN B.T7_LVL_NUM = '12' THEN B.T7_PDCR_CD
ELSE CASE WHEN B.T6_LVL_NUM = '12' THEN B.T6_PDCR_CD
ELSE CASE WHEN B.T5_LVL_NUM = '12' THEN B.T5_PDCR_CD
ELSE CASE WHEN B.T4_LVL_NUM = '12' THEN B.T4_PDCR_CD
ELSE CASE WHEN B.T3_LVL_NUM = '12' THEN B.T3_PDCR_CD
ELSE CASE WHEN B.T2_LVL_NUM = '12' THEN B.T2_PDCR_CD
ELSE CASE WHEN B.T1_LVL_NUM = '12' THEN B.T1_PDCR_CD
ELSE NULL END END END END END END END AS RFMO_PDCR_CD,
CASE WHEN B.T7_LVL_NUM = '12' THEN B.T7_SIRCON_AGENT_ID
ELSE CASE WHEN B.T6_LVL_NUM = '12' THEN B.T6_SIRCON_AGENT_ID
ELSE CASE WHEN B.T5_LVL_NUM = '12' THEN B.T5_SIRCON_AGENT_ID
ELSE CASE WHEN B.T4_LVL_NUM = '12' THEN B.T4_SIRCON_AGENT_ID
ELSE CASE WHEN B.T3_LVL_NUM = '12' THEN B.T3_SIRCON_AGENT_ID
ELSE CASE WHEN B.T2_LVL_NUM = '12' THEN B.T2_SIRCON_AGENT_ID
ELSE CASE WHEN B.T1_LVL_NUM = '12' THEN B.T1_SIRCON_AGENT_ID
ELSE NULL END END END END END END END AS RFMO_SIRCON_AGENT_ID,
CASE WHEN B.T7_LVL_NUM = '12' THEN B.T7_AGRMT_EFF_DT
ELSE CASE WHEN B.T6_LVL_NUM = '12' THEN B.T6_AGRMT_EFF_DT
ELSE CASE WHEN B.T5_LVL_NUM = '12' THEN B.T5_AGRMT_EFF_DT
ELSE CASE WHEN B.T4_LVL_NUM = '12' THEN B.T4_AGRMT_EFF_DT
ELSE CASE WHEN B.T3_LVL_NUM = '12' THEN B.T3_AGRMT_EFF_DT
ELSE CASE WHEN B.T2_LVL_NUM = '12' THEN B.T2_AGRMT_EFF_DT
ELSE CASE WHEN B.T1_LVL_NUM = '12' THEN B.T1_AGRMT_EFF_DT
ELSE NULL END END END END END END END AS RFMO_AGREEMENT_EFFECTIVE_DATE,
CASE WHEN B.T7_LVL_NUM = '12' THEN B.T7_AGRMT_END_DT
ELSE CASE WHEN B.T6_LVL_NUM = '12' THEN B.T6_AGRMT_END_DT
ELSE CASE WHEN B.T5_LVL_NUM = '12' THEN B.T5_AGRMT_END_DT
ELSE CASE WHEN B.T4_LVL_NUM = '12' THEN B.T4_AGRMT_END_DT
ELSE CASE WHEN B.T3_LVL_NUM = '12' THEN B.T3_AGRMT_END_DT
ELSE CASE WHEN B.T2_LVL_NUM = '12' THEN B.T2_AGRMT_END_DT
ELSE CASE WHEN B.T1_LVL_NUM = '12' THEN B.T1_AGRMT_END_DT
ELSE NULL END END END END END END END AS RFMO_AGREEMENT_END_DATE,

--NFMO NATIONAL FIELD MARKETING ORGANIZATION
CASE WHEN B.T8_LVL_NUM = '13' THEN B.T8_LVL
ELSE CASE WHEN B.T7_LVL_NUM = '13' THEN B.T7_LVL
E
LSE CASE WHEN B.T6_LVL_NUM = '13' THEN B.T6_LVL
ELSE CASE WHEN B.T5_LVL_NUM = '13' THEN B.T5_LVL
ELSE CASE WHEN B.T4_LVL_NUM = '13' THEN B.T4_LVL
ELSE CASE WHEN B.T3_LVL_NUM = '13' THEN B.T3_LVL
ELSE CASE WHEN B.T2_LVL_NUM = '13' THEN B.T2_LVL
ELSE CASE WHEN B.T1_LVL_NUM = '13' THEN B.T1_LVL
ELSE NULL END END END END END END END END AS NFMO_ROLE,
CASE WHEN B.T8_LVL_NUM = '13' THEN B.T8_NAME
ELSE CASE WHEN B.T7_LVL_NUM = '13' THEN B.T7_NAME
ELSE CASE WHEN B.T6_LVL_NUM = '13' THEN B.T6_NAME
ELSE CASE WHEN B.T5_LVL_NUM = '13' THEN B.T5_NAME
ELSE CASE WHEN B.T4_LVL_NUM = '13' THEN B.T4_NAME
ELSE CASE WHEN B.T3_LVL_NUM = '13' THEN B.T3_NAME
ELSE CASE WHEN B.T2_LVL_NUM = '13' THEN B.T2_NAME
ELSE CASE WHEN B.T1_LVL_NUM = '13' THEN B.T1_NAME
ELSE NULL END END END END END END END END AS NFMO_NAME,
CASE WHEN B.T8_LVL_NUM = '13' THEN B.T8_AGENCY_ID
ELSE CASE WHEN B.T7_LVL_NUM = '13' THEN B.T7_AGENCY_ID
ELSE CASE WHEN B.T6_LVL_NUM = '13' THEN B.T6_AGENCY_ID
ELSE CASE WHEN B.T5_LVL_NUM = '13' THEN B.T5_AGENCY_ID
ELSE CASE WHEN B.T4_LVL_NUM = '13' THEN B.T4_AGENCY_ID
ELSE CASE WHEN B.T3_LVL_NUM = '13' THEN B.T3_AGENCY_ID
ELSE CASE WHEN B.T2_LVL_NUM = '13' THEN B.T2_AGENCY_ID
ELSE CASE WHEN B.T1_LVL_NUM = '13' THEN B.T1_AGENCY_ID
ELSE NULL END END END END END END END END AS NFMO_ID,
CASE WHEN B.T8_LVL_NUM = '13' THEN B.T8_PDCR_CD
ELSE CASE WHEN B.T7_LVL_NUM = '13' THEN B.T7_PDCR_CD
ELSE CASE WHEN B.T6_LVL_NUM = '13' THEN B.T6_PDCR_CD
ELSE CASE WHEN B.T5_LVL_NUM = '13' THEN B.T5_PDCR_CD
ELSE CASE WHEN B.T4_LVL_NUM = '13' THEN B.T4_PDCR_CD
ELSE CASE WHEN B.T3_LVL_NUM = '13' THEN B.T3_PDCR_CD
ELSE CASE WHEN B.T2_LVL_NUM = '13' THEN B.T2_PDCR_CD
ELSE CASE WHEN B.T1_LVL_NUM = '13' THEN B.T1_PDCR_CD
ELSE NULL END END END END END END END END AS NFMO_PDCR_CD,
CASE WHEN B.T8_LVL_NUM = '13' THEN B.T8_SIRCON_AGENT_ID
ELSE CASE WHEN B.T7_LVL_NUM = '13' THEN B.T7_SIRCON_AGENT_ID
ELSE CASE WHEN B.T6_LVL_NUM = '13' THEN B.T6_SIRCON_AGENT_ID
ELSE CASE WHEN B.T5_LVL_NUM = '13' THEN B.T5_SIRCON_AGENT_ID
ELSE CASE WHEN B.T4_LVL_NUM = '13' THEN B.T4_SIRCON_AGENT_ID
ELSE CASE WHEN B.T3_LVL_NUM = '13' THEN B.T3_SIRCON_AGENT_ID
ELSE CASE WHEN B.T2_LVL_NUM = '13' THEN B.T2_SIRCON_AGENT_ID
ELSE CASE WHEN B.T1_LVL_NUM = '13' THEN B.T1_SIRCON_AGENT_ID
ELSE NULL END END END END END END END END AS NFMO_SIRCON_AGENT_ID,
CASE WHEN B.T8_LVL_NUM = '13' THEN B.T8_AGRMT_EFF_DT
ELSE CASE WHEN B.T7_LVL_NUM = '13' THEN B.T7_AGRMT_EFF_DT
ELSE CASE WHEN B.T6_LVL_NUM = '13' THEN B.T6_AGRMT_EFF_DT
ELSE CASE WHEN B.T5_LVL_NUM = '13' THEN B.T5_AGRMT_EFF_DT
ELSE CASE WHEN B.T4_LVL_NUM = '13' THEN B.T4_AGRMT_EFF_DT
ELSE CASE WHEN B.T3_LVL_NUM = '13' THEN B.T3_AGRMT_EFF_DT
ELSE CASE WHEN B.T2_LVL_NUM = '13' THEN B.T2_AGRMT_EFF_DT
ELSE CASE WHEN B.T1_LVL_NUM = '13' THEN B.T1_AGRMT_EFF_DT
ELSE NULL END END END END END END END END AS NFMO_AGREEMENT_EFFECTIVE_DATE,
CASE WHEN B.T8_LVL_NUM = '13' THEN B.T8_AGRMT_END_DT
ELSE CASE WHEN B.T7_LVL_NUM = '13' THEN B.T7_AGRMT_END_DT
ELSE CASE WHEN B.T6_LVL_NUM = '13' THEN B.T6_AGRMT_END_DT
ELSE CASE WHEN B.T5_LVL_NUM = '13' THEN B.T5_AGRMT_END_DT
ELSE CASE WHEN B.T4_LVL_NUM = '13' THEN B.T4_AGRMT_END_DT
ELSE CASE WHEN B.T3_LVL_NUM = '13' THEN B.T3_AGRMT_END_DT
ELSE CASE WHEN B.T2_LVL_NUM = '13' THEN B.T2_AGRMT_END_DT
ELSE CASE WHEN B.T1_LVL_NUM = '13' THEN B.T1_AGRMT_END_DT
ELSE NULL END END END END END END END END AS NFMO_AGREEMENT_END_DATE,

--AFMO ADMINISTRATIVE FIELD MARKETING ORGANIZATION
CASE WHEN B.T9_LVL_NUM = '10' THEN B.T9_LVL
ELSE CASE WHEN B.T8_LVL_NUM = '10' THEN B.T8_LVL
ELSE CASE WHEN B.T7_LVL_NUM = '10' THEN B.T7_LVL
ELSE CASE WHEN B.T6_LVL_NUM = '10' THEN B.T6_LVL
ELSE CASE WHEN B.T5_LVL_NUM = '10' THEN B.T5_LVL
ELSE CASE WHEN B.T4_LVL_NUM = '10' THEN B.T4_LVL
ELSE CASE WHEN B.T3_LVL_NUM = '10' THEN B.T3_LVL
ELSE CASE WHEN B.T2_LVL_NUM = '10' THEN B.T2_LVL
ELSE CASE WHEN B.T1_LVL_NUM = '10' THEN B.T1_LVL
ELSE NULL END END END END END END END END END AS AFMO_ROLE,
CASE WHEN B.T9_LVL_NUM = '10' THEN B.T9_NAME
ELSE CASE WHEN B.T8_LVL_NUM = '10' THEN B.T8_NAME
ELSE CASE WHEN B.T7_LVL_NUM = '10' THEN B.T7_NAME
ELSE CASE WHEN B.T6_LVL_NUM = '10' THEN B.T6_NAME
ELSE CASE WHEN B.T5_LVL_NUM = '10' THEN B.T5_NAME
ELSE CASE WHEN B.T4_LVL_NUM = '10' THEN B.T4_NAME
ELSE CASE WHEN B.T3_LVL_NUM = '10' THEN B.T3_NAME
ELSE CASE WHEN B.T2_LVL_NUM = '10' THEN B.T2_NAME
ELSE CASE WHEN B.T1_LVL_NUM = '10' THEN B.T1_NAME
ELSE NULL END END END END END END END END END AS AFMO_NAME,
CASE WHEN B.T9_LVL_NUM = '10' THEN B.T9_AGENCY_ID
ELSE CASE WHEN B.T8_LVL_NUM = '10' THEN B.T8_AGENCY_ID
ELSE CASE WHEN B.T7_LVL_NUM = '10' THEN B.T7_AGENCY_ID
ELSE CASE WHEN B.T6_LVL_NUM = '10' THEN B.T6_AGENCY_ID
ELSE CASE WHEN B.T5_LVL_NUM = '10' THEN B.T5_AGENCY_ID
ELSE CASE WHEN B.T4_LVL_NUM = '10' THEN B.T4_AGENCY_ID
ELSE CASE WHEN B.T3_LVL_NUM = '10' THEN B.T3_AGENCY_ID
ELSE CASE WHEN B.T2_LVL_NUM = '10' THEN B.T2_AGENCY_ID
ELSE CASE WHEN B.T1_LVL_NUM = '10' THEN B.T1_AGENCY_ID
ELSE NULL END END END END END END END END END AS AFMO_ID,
CASE WHEN B.T9_LVL_NUM = '10' THEN B.T9_PDCR_CD
ELSE CASE WHEN B.T8_LVL_NUM = '10' THEN B.T8_PDCR_CD
ELSE CASE WHEN B.T7_LVL_NUM = '10' THEN B.T7_PDCR_CD
ELSE CASE WHEN B.T6_LVL_NUM = '10' THEN B.T6_PDCR_CD
ELSE CASE WHEN B.T5_LVL_NUM = '10' THEN B.T5_PDCR_CD
ELSE CASE WHEN B.T4_LVL_NUM = '10' THEN B.T4_PDCR_CD
ELSE CASE WHEN B.T3_LVL_NUM = '10' THEN B.T3_PDCR_CD
ELSE CASE WHEN B.T2_LVL_NUM = '10' THEN B.T2_PDCR_CD
ELSE CASE WHEN B.T1_LVL_NUM = '10' THEN B.T1_PDCR_CD
ELSE NULL END END END END END END END END END AS AFMO_PDCR_CD,
CASE WHEN B.T9_LVL_NUM = '10' THEN B.T9_SIRCON_AGENT_ID
ELSE CASE WHEN B.T8_LVL_NUM = '10' THEN B.T8_SIRCON_AGENT_ID
ELSE CASE WHEN B.T7_LVL_NUM = '10' THEN B.T7_SIRCON_AGENT_ID
ELSE CASE WHEN B.T6_LVL_NUM = '10' THEN B.T6_SIRCON_AGENT_ID
ELSE CASE WHEN B.T5_LVL_NUM = '10' THEN B.T5_SIRCON_AGENT_ID
ELSE CASE WHEN B.T4_LVL_NUM = '10' THEN B.T4_SIRCON_AGENT_ID
ELSE CASE WHEN B.T3_LVL_NUM = '10' THEN B.T3_SIRCON_AGENT_ID
ELSE CASE WHEN B.T2_LVL_NUM = '10' THEN B.T2_SIRCON_AGENT_ID
ELSE CASE WHEN B.T1_LVL_NUM = '10' THEN B.T1_SIRCON_AGENT_ID
ELSE NULL END END END END END END END END END AS AFMO_SIRCON_AGENT_ID,
CASE WHEN B.T9_LVL_NUM = '10' THEN B.T9_AGRMT_EFF_DT
ELSE CASE WHEN B.T8_LVL_NUM = '10' THEN B.T8_AGRMT_EFF_DT
ELSE CASE WHEN B.T7_LVL_NUM = '10' THEN B.T7_AGRMT_EFF_DT
ELSE CASE WHEN B.T6_LVL_NUM = '10' THEN B.T6_AGRMT_EFF_DT
ELSE CASE WHEN B.T5_LVL_NUM = '10' THEN B.T5_AGRMT_EFF_DT
ELSE CASE WHEN B.T4_LVL_NUM = '10' THEN B.T4_AGRMT_EFF_DT
ELSE CASE WHEN B.T3_LVL_NUM = '10' THEN B.T3_AGRMT_EFF_DT
ELSE CASE WHEN B.T2_LVL_NUM = '10' THEN B.T2_AGRMT_EFF_DT
ELSE CASE WHEN B.T1_LVL_NUM = '10' THEN B.T1_AGRMT_EFF_DT
ELSE NULL END END END END END END END END END AS AFMO_AGREEMENT_EFFECTIVE_DATE,
CASE WHEN B.T9_LVL_NUM = '10' THEN B.T9_AGRMT_END_DT
ELSE CASE WHEN B.T8_LVL_NUM = '10' THEN B.T8_AGRMT_END_DT
ELSE CASE WHEN B.T7_LVL_NUM = '10' THEN B.T7_AGRMT_END_DT
ELSE CASE WHEN B.T6_LVL_NUM = '10' THEN B.T6_AGRMT_END_DT
ELSE CASE WHEN B.T5_LVL_NUM = '10' THEN B.T5_AGRMT_END_DT
ELSE CASE WHEN B.T4_LVL_NUM = '10' THEN B.T4_AGRMT_END_DT
ELSE CASE WHEN B.T3_LVL_NUM = '10' THEN B.T3_AGRMT_END_DT
ELSE CASE WHEN B.T2_LVL_NUM = '10' THEN B.T2_AGRMT_END_DT
ELSE CASE WHEN B.T1_LVL_NUM = '10' THEN B.T1_AGRMT_END_DT
ELSE NULL END END END END END END END END END AS AFMO_AGREEMENT_END_DATE,

/****NEED TO UPDATE TOPLINE FOR AFMO*/

--TOPLINE
--BP: ADDED 2/9/24 - Currently incorrect
/*
CASE
WHEN B.AGRMT_EFF_DT >= '2024-02-01' THEN
CASE
WHEN NFMO_PDCR_CD IS NOT NULL THEN NFMO_Role
WHEN RFMO_PDCR_CD IS NOT NULL THEN RFMO_Role
WHEN FMO_PDCR_CD IS NOT NULL THEN FMO_Role
WHEN SGA2_PDCR_CD IS NOT NULL THEN SGA2_Role
WHEN SGA_PDCR_CD IS NOT NULL THEN SGA_Role
WHEN MGA_PDCR_CD IS NOT NULL THEN MGA_Role
WHEN GA_PDCR_CD IS NOT NULL THEN GA_Role
ELSE NFMO_ROLE
END
ELSE
--Existing Case Logic
CASE
WHEN FMO_PDCR_CD = '222222' AND SGA_ROLE = 'SGA' THEN SGA_ROLE
WHEN FMO_PDCR_CD = '222222' AND MGA_ROLE = 'MGA' THEN MGA_ROLE
WHEN AFMO_PDCR_CD IS NOT NULL THEN FMO_ROLE --changing from showing the AFMO as the topline to showing the FMO--JJ
ELSE FMO_ROLE
END
END AS TOPLINE_ROLE,*/

--Topline fix April 2024
CASE
WHEN NFMO_PDCR_CD IS NOT NULL THEN NFMO_Role
WHEN RFMO_PDCR_CD IS NOT NULL THEN RFMO_Role
WHEN FMO_PDCR_CD IS NOT NULL THEN

CASE
WHEN FMO_PDCR_CD = '222222' AND SGA2_ROLE = 'SGA2' THEN SGA2_ROLE
WHEN FMO_PDCR_CD = '222222' AND SGA_ROLE = 'SGA' THEN SGA_ROLE
WHEN FMO_PDCR_CD = '222222' AND MGA_ROLE = 'MGA' THEN MGA_ROLE
WHEN AFMO_PDCR_CD IS NOT NULL THEN FMO_ROLE --changing from showing the AFMO as the topline to showing the FMO--JJ
ELSE FMO_ROLE
END

WHEN SGA2_PDCR_CD IS NOT NULL THEN SGA2_Role
WHEN SGA_PDCR_CD IS NOT NULL THEN SGA_Role
WHEN MGA_PDCR_CD IS NOT NULL THEN MGA_Role
WHEN GA_PDCR_CD IS NOT NULL THEN GA_Role
ELSE NFMO_ROLE
END AS TOPLINE_ROLE,

/*CASE
WHEN B.AGRMT_EFF_DT >= '2024-02-01' THEN
CASE
WHEN NFMO_PDCR_CD is not null then NFMO_NAME
WHEN RFMO_PDCR_CD is not null then RFMO_NAME
WHEN FMO_PDCR_CD is not null then FMO_NAME
WHEN SGA2_PDCR_CD is not null then SGA2_NAME
WHEN SGA_PDCR_CD is not null then SGA_NAME
WHEN MGA_PDCR_CD is not null then MGA_NAME
WHEN GA_PDCR_CD is not null then GA_NAME
ELSE NFMO_NAME
END
ELSE
CASE
WHEN FMO_PDCR_CD = '222222' AND SGA_ROLE = 'SGA' THEN SGA_NAME
WHEN FMO_PDCR_CD = '222222' AND MGA_ROLE = 'MGA' THEN MGA_NAME
WHEN AFMO_PDCR_CD IS NOT NULL THEN FMO_NAME --changing from showing the AFMO as the topline to showing the FMO--JJ
ELSE FMO_NAME
END
END AS TOPLINE_NAME,*/

--Topline fix April 2024
CASE
WHEN NFMO_PDCR_CD is not null then NFMO_NAME
WHEN RFMO_PDCR_CD is not null then RFMO_NAME
WHEN FMO_PDCR_CD is not null then

CASE
WHEN FMO_PDCR_CD = '222222' AND SGA2_ROLE = 'SGA2' THEN SGA2_NAME
WHEN FMO_PDCR_CD = '222222' AND SGA_ROLE = 'SGA' THEN SGA_NAME
WHEN FMO_PDCR_CD = '222222' AND MGA_ROLE = 'MGA' THEN MGA_NAME
WHEN AFMO_PDCR_CD IS NOT NULL THEN FMO_NAME --changing from showing the AFMO as the topline to showing the FMO--JJ
ELSE FMO_NAME
END

WHEN SGA2_PDCR_CD is not null then SGA2_NAME
WHEN SGA_PDCR_CD is not null then SGA_NAME
WHEN MGA_PDCR_CD is not null then MGA_NAME
WHEN GA_PDCR_CD is not null then GA_NAME
ELSE NFMO_NAME
END AS TOPLINE_NAME,

/*CASE
WHEN B.AGRMT_EFF_DT >= '2024-02-01' THEN
CASE
WHEN NFMO_PDCR_CD is not null then NFMO_ID
WHEN RFMO_PDCR_CD is not null then RFMO_ID
WHEN FMO_PDCR_CD is not null then FMO_ID
WHEN SGA2_PDCR_CD is not null then SGA2_ID
WHEN SGA_PDCR_CD is not null then SGA_ID
WHEN MGA_PDCR_CD is not null then MGA_ID
WHEN GA_PDCR_CD is not null then GA_ID
ELSE NFMO_ID
END
ELSE
CASE
WHEN FMO_PDCR_CD = '222222' AND SGA_ROLE = 'SGA' THEN SGA_ID
WHEN FMO_PDCR_CD = '222222' AND MGA_ROLE = 'MGA' THEN MGA_ID
WHEN AFMO_PDCR_CD IS NOT NULL THEN FMO_ID
ELSE FMO_ID
END
END AS TOPLINE_ID2,*/

--Topline fix April 2024
CASE
WHEN NFMO_PDCR_CD is not null then NFMO_ID
WHEN RFMO_PDCR_CD is not null then RFMO_ID
WHEN FMO_PDCR_CD is not null then

CASE
WHEN FMO_PDCR_CD = '222222' AND SGA2_ROLE = 'SGA2' THEN SGA2_ID
WHEN FMO_PDCR_CD = '222222' AND SGA_ROLE = 'SGA' THEN SGA_ID
WHEN FMO_PDCR_CD = '222222' AND MGA_ROLE = 'MGA' THEN MGA_ID
WHEN AFMO_PDCR_CD IS NOT NULL THEN FMO_ID
ELSE FMO_ID
END

WHEN SGA2_PDCR_CD is not null then SGA2_ID
WHEN SGA_PDCR_CD is not null then SGA_ID
WHEN MGA_PDCR_CD is not null then MGA_ID
WHEN GA_PDCR_CD is not null then GA_ID
ELSE NFMO_ID
END AS TOPLINE_ID2,

/*CASE
WHEN B.AGRMT_EFF_DT >= '2024-02-01' THEN
CASE
WHEN NFMO_PDCR_CD is not null then NFMO_PDCR_CD
WHEN RFMO_PDCR_CD is not null then RFMO_PDCR_CD
WHEN FMO_PDCR_CD is not null then FMO_PDCR_CD
WHEN SGA2_PDCR_CD is not null then SGA2_PDCR_CD
WHEN SGA_PDCR_CD is not null then SGA_PDCR_CD
WHEN MGA_PDCR_CD is not null then MGA_PDCR_CD
WHEN GA_PDCR_CD is not null then GA_PDCR_CD
ELSE NFMO_PDCR_CD
END
ELSE
CASE
WHEN FMO_PDCR_CD = '222222' AND SGA_ROLE = 'SGA' THEN SGA_PDCR_CD
WHEN FMO_PDCR_CD = '222222' AND MGA_ROLE = 'MGA' THEN MGA_PDCR_CD
WHEN AFMO_PDCR_CD IS NOT NULL THEN FMO_PDCR_CD--changing from showing the AFMO as the topline to showing the FMO--JJ
ELSE FMO_PDCR_CD
END
END AS TOPLINE_PDCR_CD,*/

--Topline fix April 2024
CASE
WHEN NFMO_PDCR_CD is not null then NFMO_PDCR_CD
WHEN RFMO_PDCR_CD is not null then RFMO_PDCR_CD
WHEN FMO_PDCR_CD is not null then

CASE
WHEN FMO_PDCR_CD = '222222' AND SGA2_ROLE = 'SGA2' THEN SGA2_PDCR_CD
WHEN FMO_PDCR_CD = '222222' AND SGA_ROLE = 'SGA' THEN SGA_PDCR_CD
WHEN FMO_PDCR_CD = '222222' AND MGA_ROLE = 'MGA' THEN MGA_PDCR_CD
WHEN AFMO_PDCR_CD IS NOT NULL THEN FMO_PDCR_CD--changing from showing the AFMO as the topline to showing the FMO--JJ
ELSE FMO_PDCR_CD
END

WHEN SGA2_PDCR_CD is not null then SGA2_PDCR_CD
WHEN SGA_PDCR_CD is not null then SGA_PDCR_CD
WHEN MGA_PDCR_CD is not null then MGA_PDCR_CD
WHEN GA_PDCR_CD is not null then GA_PDCR_CD
ELSE NFMO_PDCR_CD
END AS TOPLINE_PDCR_CD,

/*CASE
WHEN B.AGRMT_EFF_DT >= '2024-02-01' THEN
CASE
WHEN NFMO_PDCR_CD is not null then NFMO_SIRCON_AGENT_ID
WHEN RFMO_PDCR_CD is not null then RFMO_SIRCON_AGENT_ID
WHEN FMO_PDCR_CD is not null then FMO_SIRCON_AGENT_ID
WHEN SGA2_PDCR_CD is not null then SGA2_SIRCON_AGENT_ID
WHEN SGA_PDCR_CD is not null then SGA_SIRCON_AGENT_ID
WHEN MGA_PDCR_CD is not null then MGA_SIRCON_AGENT_ID
WHEN GA_PDCR_CD is not null then GA_SIRCON_AGENT_ID
ELSE NFMO_SIRCON_AGENT_ID
END
ELSE
CASE
WHEN FMO_PDCR_CD = '222222' AND SGA_ROLE = 'SGA' THEN SGA_SIRCON_AGENT_ID
WHEN FMO_PDCR_CD = '222222' AND MGA_ROLE = 'MGA' THEN MGA_SIRCON_AGENT_ID
WHEN AFMO_PDCR_CD IS NOT NULL THEN FMO_SIRCON_AGENT_ID --changing from showing the AFMO as the topline to showing the FMO--JJ
ELSE FMO_SIRCON_AGENT_ID
END
END AS TOPLINE_SIRCON_AGENT_ID,*/

--Topline fix April 2024
CASE
WHEN NFMO_PDCR_CD is not null then NFMO_SIRCON_AGENT_ID
WHEN RFMO_PDCR_CD is not null then RFMO_SIRCON_AGENT_ID
WHEN FMO_PDCR_CD is not null then

CASE
WHEN FMO_PDCR_CD = '222222' AND SGA2_ROLE = 'SGA2' THEN SGA2_SIRCON_AGENT_ID
WHEN FMO_PDCR_CD = '222222' AND SGA_ROLE = 'SGA' THEN SGA_SIRCON_AGENT_ID
WHEN FMO_PDCR_CD = '222222' AND MGA_ROLE = 'MGA' THEN MGA_SIRCON_AGENT_ID
WHEN AFMO_PDCR_CD IS NOT NULL THEN FMO_SIRCON_AGENT_ID --changing from showing the AFMO as the topline to showing the FMO--JJ
ELSE FMO_SIRCON_AGENT_ID
END

WHEN SGA2_PDCR_CD is not null then SGA2_SIRCON_AGENT_ID
WHEN SGA_PDCR_CD is not null then SGA_SIRCON_AGENT_ID
WHEN MGA_PDCR_CD is not null then MGA_SIRCON_AGENT_ID
WHEN GA_PDCR_CD is not null then GA_SIRCON_AGENT_ID
ELSE NFMO_SIRCON_AGENT_ID
END AS TOPLINE_SIRCON_AGENT_ID,

/*CASE
WHEN B.AGRMT_EFF_DT >= '2024-02-01' THEN
CASE
WHEN NFMO_PDCR_CD is not null then NFMO_AGREEMENT_EFFECTIVE_DATE
WHEN RFMO_PDCR_CD is not null then RFMO_AGREEMENT_EFFECTIVE_DATE
WHEN FMO_PDCR_CD is not null then FMO_AGREEMENT_EFFECTIVE_DATE
WHEN SGA2_PDCR_CD is n
ot null then SGA2_AGREEMENT_EFFECTIVE_DATE
WHEN SGA_PDCR_CD is not null then SGA_AGREEMENT_EFFECTIVE_DATE
WHEN MGA_PDCR_CD is not null then MGA_AGREEMENT_EFFECTIVE_DATE
WHEN GA_PDCR_CD is not null then GA_AGREEMENT_EFFECTIVE_DATE
ELSE NFMO_AGREEMENT_EFFECTIVE_DATE
END
ELSE
CASE
WHEN FMO_PDCR_CD = '222222' AND SGA_ROLE = 'SGA' THEN SGA_AGREEMENT_EFFECTIVE_DATE
WHEN FMO_PDCR_CD = '222222' AND MGA_ROLE = 'MGA' THEN MGA_AGREEMENT_EFFECTIVE_DATE
WHEN AFMO_PDCR_CD IS NOT NULL THEN AFMO_AGREEMENT_EFFECTIVE_DATE
ELSE FMO_AGREEMENT_EFFECTIVE_DATE
END
END AS TOPLINE_AGREEMENT_EFFECTIVE_DATE,*/

--Topline fix April 2024
CASE
WHEN NFMO_PDCR_CD is not null then NFMO_AGREEMENT_EFFECTIVE_DATE
WHEN RFMO_PDCR_CD is not null then RFMO_AGREEMENT_EFFECTIVE_DATE
WHEN FMO_PDCR_CD is not null then

CASE
WHEN FMO_PDCR_CD = '222222' AND SGA2_ROLE = 'SGA2' THEN SGA2_AGREEMENT_EFFECTIVE_DATE
WHEN FMO_PDCR_CD = '222222' AND SGA_ROLE = 'SGA' THEN SGA_AGREEMENT_EFFECTIVE_DATE
WHEN FMO_PDCR_CD = '222222' AND MGA_ROLE = 'MGA' THEN MGA_AGREEMENT_EFFECTIVE_DATE
WHEN AFMO_PDCR_CD IS NOT NULL THEN AFMO_AGREEMENT_EFFECTIVE_DATE
ELSE FMO_AGREEMENT_EFFECTIVE_DATE
END

WHEN SGA2_PDCR_CD is not null then SGA2_AGREEMENT_EFFECTIVE_DATE
WHEN SGA_PDCR_CD is not null then SGA_AGREEMENT_EFFECTIVE_DATE
WHEN MGA_PDCR_CD is not null then MGA_AGREEMENT_EFFECTIVE_DATE
WHEN GA_PDCR_CD is not null then GA_AGREEMENT_EFFECTIVE_DATE
ELSE NFMO_AGREEMENT_EFFECTIVE_DATE
END AS TOPLINE_AGREEMENT_EFFECTIVE_DATE,

/*CASE
WHEN B.AGRMT_EFF_DT >= '2024-02-01' THEN
CASE
WHEN NFMO_PDCR_CD is not null then NFMO_AGREEMENT_END_DATE
WHEN RFMO_PDCR_CD is not null then RFMO_AGREEMENT_END_DATE
WHEN FMO_PDCR_CD is not null then FMO_AGREEMENT_END_DATE
WHEN SGA2_PDCR_CD is not null then SGA2_AGREEMENT_END_DATE
WHEN SGA_PDCR_CD is not null then SGA_AGREEMENT_END_DATE
WHEN MGA_PDCR_CD is not null then MGA_AGREEMENT_END_DATE
WHEN GA_PDCR_CD is not null then GA_AGREEMENT_END_DATE
ELSE NFMO_AGREEMENT_END_DATE
END
ELSE
CASE
WHEN FMO_PDCR_CD = '222222' AND SGA_ROLE = 'SGA' THEN SGA_AGREEMENT_END_DATE
WHEN FMO_PDCR_CD = '222222' AND MGA_ROLE = 'MGA' THEN MGA_AGREEMENT_END_DATE
WHEN AFMO_PDCR_CD IS NOT NULL THEN AFMO_AGREEMENT_END_DATE
ELSE FMO_AGREEMENT_END_DATE
END
END AS TOPLINE_AGREEMENT_END_DATE,*/

--Topline fix April 2024
CASE
WHEN NFMO_PDCR_CD is not null then NFMO_AGREEMENT_END_DATE
WHEN RFMO_PDCR_CD is not null then RFMO_AGREEMENT_END_DATE
WHEN FMO_PDCR_CD is not null then

CASE
WHEN FMO_PDCR_CD = '222222' AND SGA2_ROLE = 'SGA2' THEN SGA2_AGREEMENT_END_DATE
WHEN FMO_PDCR_CD = '222222' AND SGA_ROLE = 'SGA' THEN SGA_AGREEMENT_END_DATE
WHEN FMO_PDCR_CD = '222222' AND MGA_ROLE = 'MGA' THEN MGA_AGREEMENT_END_DATE
WHEN AFMO_PDCR_CD IS NOT NULL THEN AFMO_AGREEMENT_END_DATE
ELSE FMO_AGREEMENT_END_DATE
END

WHEN SGA2_PDCR_CD is not null then SGA2_AGREEMENT_END_DATE
WHEN SGA_PDCR_CD is not null then SGA_AGREEMENT_END_DATE
WHEN MGA_PDCR_CD is not null then MGA_AGREEMENT_END_DATE
WHEN GA_PDCR_CD is not null then GA_AGREEMENT_END_DATE
ELSE NFMO_AGREEMENT_END_DATE
END AS TOPLINE_AGREEMENT_END_DATE,
--CHANNEL
/*Sales Channels are not in Sircon. Next 2 fields describe the type of hierarchy based on the agent's topline.
Translates to channel but do not want to give the impression channel is in Sircon by calling the columns channel */
CASE
--11/13/2024 Changes from Salesforce Channel Information
WHEN B.agent_id = 'A454638' then 'Illegible - Work Queue'
WHEN B.agent_id = 'A210652' then 'No Agent - Work Queue'
WHEN B.agent_id = 'SLSOPS1' then 'No Agent - Confirmed'
WHEN B.agent_id = 'ONLINE1' then 'Digital'
WHEN B.agent_id = 'BRKPURL' then 'Other'
WHEN B.agent_id = 'INTCOM1' then 'House - internal to broker'

WHEN TOPLINE_PDCR_CD IS NULL THEN 'Unassigned'
WHEN TOPLINE_PDCR_CD = '435449' THEN 'Employee'
WHEN TOPLINE_PDCR_CD = '435450' THEN 'Seasonal'
WHEN T.CHANNEL = 'Vendor' THEN 'Seasonal'
WHEN T.topline_category='Sale No Tail' THEN 'SNT-Broker'
WHEN T.topline_category='Exchange' THEN 'Seniors Private Exchange'
ELSE 'Broker' END AS HIERARCHY_TYPE_D,
CASE
--11/13/2024 Changes from Salesforce Channel Information
WHEN B.agent_id = 'A454638' then 'Illegible - Work Queue'
WHEN B.agent_id = 'A210652' then 'No Agent - Work Queue'
WHEN B.agent_id = 'SLSOPS1' then 'No Agent - Confirmed'
WHEN B.agent_id = 'ONLINE1' then 'Digital'
WHEN B.agent_id = 'BRKPURL' then 'Other'
WHEN B.agent_id = 'INTCOM1' then 'House - internal to broker'

WHEN T.CHANNEL = 'Vendor' THEN 'Telesales'
WHEN HIERARCHY_TYPE_D IN ('Employee','Seasonal') THEN E.EE_CHANNEL
WHEN T.topline_category='Sale No Tail' THEN 'SNT-Broker'
WHEN T.topline_category='Exchange' THEN 'Seniors Private Exchange'
ELSE CASE WHEN HIERARCHY_TYPE_D = 'Broker' THEN T."Sub Channel"
ELSE 'Unassigned' END END AS HIERARCHY_SUB_TYPE_X
FROM BHIER AS B
LEFT JOIN EECHAN2 AS E ON ((B.AGENT_ID = E.AGENT_ID) AND (B.AGRMT_EFF_DT = E.AGRMT_EFF_DT))
LEFT JOIN REPORTING_V.LU_TOPLINE_CHANNEL AS T ON ((Topline_ID2 = T.Topline_ID) AND (TOPLINE_AGREEMENT_EFFECTIVE_DATE BETWEEN T.Start_Date AND T.End_Date))
) WITH DATA PRIMARY INDEX (AGENT_ID, AGENT_PDCR_CD) ON COMMIT PRESERVE ROWS
;

COLLECT STATS COLUMN (AGENT_ID, AGENT_PDCR_CD) ON CHier;

--clean up nulls in Hierarchy_sub_type and name topline_ID properly
--6/8/2022 MR Added Cast all Agreement Effective Dates as Dates
CREATE MULTISET VOLATILE TABLE DHIER AS (
SELECT DISTINCT
C.Source,
C.AGENT_NAME, C.AGENT_ID, C.AGENT_PDCR_CD, C.SIRCON_AGENT_ID, C.NPN, C.AGENT_EFFECTIVE_DATE, C.AGENT_TERMINATION_DATE,
C.AGENT_LEVEL, C.AGRMT_ID,
cast(C.AGREEMENT_EFFECTIVE_DATE as date) as AGREEMENT_EFFECTIVE_DATE,
cast(C.AGREEMENT_END_DATE as date) as AGREEMENT_END_DATE,
--Direct Upline
C.DIRECT_UPLINE_ROLE, C.DIRECT_UPLINE_NAME, C.DIRECT_UPLINE_AGENCY_ID, C.DIRECT_UPLINE_PDCR_CD, C.DIRECT_UPLINE_SIRCON_AGENT_ID,
cast(C.DIRECT_UPLINE_AGREEMENT_EFFECTIVE_DATE as date) as DIRECT_UPLINE_AGREEMENT_EFFECTIVE_DATE,
cast(C.DIRECT_UPLINE_AGREEMENT_END_DATE as date) as DIRECT_UPLINE_AGREEMENT_END_DATE,
--Personal Business Entity
C.PBE_ROLE, C.PBE_NAME, C.PBE_AGENCY_ID, C.PBE_PDCR_CD, C.PBE_SIRCON_AGENT_ID,
cast(C.PBE_AGREEMENT_EFFECTIVE_DATE as date) as PBE_AGREEMENT_EFFECTIVE_DATE,
cast(C.PBE_AGREEMENT_END_DATE as date) as PBE_AGREEMENT_END_DATE,
--GA
C.GA_ROLE, C.GA_NAME, C.GA_ID, C.GA_PDCR_CD, C.GA_SIRCON_AGENT_ID,
cast(C.GA_AGREEMENT_EFFECTIVE_DATE as date) as GA_AGREEMENT_EFFECTIVE_DATE,
cast(C.GA_AGREEMENT_END_DATE as date) as GA_AGREEMENT_END_DATE,
--MGA
C.MGA_ROLE, C.MGA_NAME, C.MGA_ID, C.MGA_PDCR_CD, C.MGA_SIRCON_AGENT_ID,
cast(C.MGA_AGREEMENT_EFFECTIVE_DATE as date) as MGA_AGREEMENT_EFFECTIVE_DATE,
cast(C.MGA_AGREEMENT_END_DATE as date) as MGA_AGREEMENT_END_DATE,
--SGA
C.SGA_ROLE, C.SGA_NAME, C.SGA_ID, C.SGA_PDCR_CD, C.SGA_SIRCON_AGENT_ID,
cast(C.SGA_AGREEMENT_EFFECTIVE_DATE as date) as SGA_AGREEMENT_EFFECTIVE_DATE,
cast(C.SGA_AGREEMENT_END_DATE as date) as SGA_AGREEMENT_END_DATE,

--BP: ADDED SGA2 2/9/2024
--SGA2
C.SGA2_ROLE, C.SGA2_NAME, C.SGA2_ID, C.SGA2_PDCR_CD, C.SGA2_SIRCON_AGENT_ID,
cast(C.SGA2_AGREEMENT_EFFECTIVE_DATE as date) as SGA2_AGREEMENT_EFFECTIVE_DATE,
cast(C.SGA2_AGREEMENT_END_DATE as date) as SGA2_AGREEMENT_END_DATE,

--FMO
C.FMO_ROLE, C.FMO_NAME, C.FMO_ID, C.FMO_PDCR_CD, C.FMO_SIRCON_AGENT_ID,
cast(C.FMO_AGREEMENT_EFFECTIVE_DATE as date) as FMO_AGREEMENT_EFFECTIVE_DATE,
cast(C.FMO_AGREEMENT_END_DATE as date) as FMO_AGREEMENT_END_DATE,

--BP: ADDED NFMO AND RFMO ON 2/9/24
--RFMO
C.RFMO_ROLE, C.RFMO_NAME, C.RFMO_ID, C.RFMO_PDCR_CD, C.RFMO_SIRCON_AGENT_ID,
cast(C.RFMO_AGREEMENT_EFFECTIVE_DATE as date) as RFMO_AGREEMENT_EFFECTIVE_DATE,
cast(C.RFMO_AGREEMENT_END_DATE as date) as RFMO_AGREEMENT_END_DATE,
--NFMO
C.NFMO_ROLE, C.NFMO_NAME, C.NFMO_ID, C.NFMO_PDCR_CD, C.NFMO_SIRCON_AGENT_ID,
cast(C.NFMO_AGREEMENT_EFFECTIVE_DATE as date) as NFMO_AGREEMENT_EFFECTIVE_DATE,
cast(C.NFMO_AGREEMENT_END_DATE as date) as NFMO_AGREEMENT_END_DATE,
--AFMO
C.AFMO_ROLE, C.AFMO_NAME, C.AFMO_ID, C.AFMO_PDCR_CD, C.AFMO_SIRCON_AGENT_ID,
cast(C.AFMO_AGREEMENT_EFFECTIVE_DATE as date) as AFMO_AGREEMENT_EFFECTIVE_DATE,
cast(C.AFMO_AGREEMENT_END_DATE as date) as AFMO_AGREEMENT_END_DATE,
--Topline
C.TOPLINE_ROLE, C.TOPLINE_NAME, C.TOPLINE_ID2 AS TOPLINE_ID, C.TOPLINE_PDCR_CD, C.TOPLINE_SIRCON_AGENT_ID,
cast(C.TOPLINE_AGREEMENT_EFFECTIVE_DATE as date) as TOPLINE_AGREEMENT_EFFECTIVE_DATE,
cast(C.TOPLINE_AGREEMENT_END_DATE as date) as TOPLINE_AGREEMENT_END_DATE,
--CHANNEL
C.HIERARCHY_TYPE_D,
CASE WHEN c.HIERARCHY_SUB_TYPE_X IS NOT NULL THEN c.HIERARCHY_SUB_TYPE_X
ELSE CASE WHEN C.HIERARCHY_TYPE_D = 'Broker' and c.HIERARCHY_SUB_TYPE_X is null then 'Field'
ELSE 'Unassigned' END END AS HIERARCHY_SUB_TYPE_D
From CHIER as C
) WITH DATA PRIMARY INDEX (AGENT_ID, AGENT_PDCR_CD) ON COMMIT PRESERVE ROWS
;

COLLECT STATS COLUMN (AGENT_ID, AGENT_PDCR_CD) ON DHIER;

/*NEED TO ADD AFMO COLUMNS TO THIS TABLE*/
--add non-sircon, non-human, sales-use-only agent IDs
INSERT INTO DHIER
SELECT

Source
,Agent_Name
,AGENT_ID
,Agent_PDCR_CD
,SIRCON_AGENT_ID
,NPN
,AGENT_EFFECTIVE_DATE
,AGENT_TERMINATION_DATE
,AGENT_LEVEL
,AGRMT_ID
,AGREEMENT_EFFECTIVE_DATE
,AGREEMENT_END_DATE
,DIRECT_UPLINE_ROLE
,DIRECT_UPLINE_NAME
,DIRECT_UPLINE_AGENCY_ID
,DIRECT_UPLINE_PDCR_CD
,DIRECT_UPLINE_SIRCON_AGENT_ID
,DIRECT_UPLINE_AGREEMENT_EFFECTIVE_DATE
,DIRECT_UPLINE_AGREEMENT_END_DATE
,PBE_ROLE
,PBE_NAME
,PBE_AGENCY_ID
,PBE_PDCR_CD
,PBE_SIRCON_AGENT_ID
,PBE_AGREEMENT_EFFECTIVE_DATE
,PBE_AGREEMENT_END_DATE
,GA_ROLE
,GA_NAME
,GA_ID
,GA_PDCR_CD
,GA_SIRCON_AGENT_ID
,GA_AGREEMENT_EFFECTIVE_DATE
,GA_AGREEMENT_END_DATE
,MGA_ROLE
,MGA_NAME
,MGA_ID
,MGA_PDCR_CD
,MGA_SIRCON_AGENT_ID
,MGA_AGREEMENT_EFFECTIVE_DATE
,MGA_AGREEMENT_END_DATE
,SGA_ROLE
,SGA_NAME
,SGA_ID
,SGA_PDCR_CD
,SGA_SIRCON_AGENT_ID
,SGA_AGREEMENT_EFFECTIVE_DATE
,SGA_AGREEMENT_END_DATE
,null as SGA2_ROLE
,null as SGA2_NAME
,null as SGA2_ID
,null as SGA2_PDCR_CD
,null as SGA2_SIRCON_AGENT_ID
,null as SGA2_AGREEMENT_EFFECTIVE_DATE
,null as SGA2_AGREEMENT_END_DATE
,FMO_ROLE
,FMO_NAME
,FMO_ID
,FMO_PDCR_CD
,FMO_SIRCON_AGENT_ID
,FMO_AGREEMENT_EFFECTIVE_DATE
,FMO_AGREEMENT_END_DATE
,null as RFMO_ROLE
,null as RFMO_NAME
,null as RFMO_ID
,null as RFMO_PDCR_CD
,null as RFMO_SIRCON_AGENT_ID
,null as RFMO_AGREEMENT_EFFECTIVE_DATE
,null as RFMO_AGREEMENT_END_DATE
,null as NFMO_ROLE
,null as NFMO_NAME
,null as NFMO_ID
,null as NFMO_PDCR_CD
,null as NFMO_SIRCON_AGENT_ID
,null as NFMO_AGREEMENT_EFFECTIVE_DATE
,null as NFMO_AGREEMENT_END_DATE
,AFMO_ROLE
,AFMO_NAME
,AFMO_ID
,AFMO_PDCR_CD
,AFMO_SIRCON_AGENT_ID
,AFMO_AGREEMENT_EFFECTIVE_DATE
,AFMO_AGREEMENT_END_DATE
,TOPLINE_ROLE
,TOPLINE_NAME
,ToplineID as TOPLINE_ID
,TOPLINE_PDCR_CD
,TOPLINE_SIRCON_AGENT_ID
,TOPLINE_AGREEMENT_EFFECTIVE_DATE
,TOPLINE_AGREEMENT_END_DATE
,HIERARCHY_TYPE_D
,HIERARCHY_SUB_TYPE_D
--FROM HSLABGrowthRpt.NON_SIRCON_SALES_USE_AGENT_IDS
From BUSINESS_OPS_CORE_V.NON_SIRCON_SALES_USE_AGENT_IDS;


--Identify agents where two agreements have a 1/1/2099 End Date on TRXHub table
--these have been reviewed in Sircon and Sircon doesn't have two active Medicare Agreements. Issue is with TRXHub.
CREATE MULTISET VOLATILE TABLE #FindBugs AS
(select agent_name, AGENT_ID, AGRMT_ID, AGREEMENT_EFFECTIVE_DATE, agreement_end_date
, row_number() over (partition by AGENT_ID order by AGREEMENT_EFFECTIVE_DATE) as currentrec
,row_number() over (partition by AGENT_ID order by AGREEMENT_EFFECTIVE_DATE)+1 as nextrec
from DHier )
WITH DATA PRIMARY INDEX(AGENT_ID) ON COMMIT PRESERVE ROWS;

COLLECT STATS COLUMN (AGENT_ID) ON #FindBugs;

--Create End Date 1 day less than agent's next agreement begin date
CREATE MULTISET VOLATILE TABLE #Adjust AS (
SELECT D.*, adj.Adjst_Agrmt_End_Dt
FROM DHIER as D
LEFT JOIN (
SELECT ORG.*, cast (Nextrec.Agreement_Effective_Date AS date) - interval '1' DAY AS Adjst_Agrmt_End_Dt
FROM #FindBugs ORG
LEFT JOIN #FindBugs AS nextrec
ON ORG.agent_id = nextrec.agent_id
AND ORG.nextrec = nextrec.currentrec
WHERE nextrec.agreement_end_date BETWEEN ORG.agreement_effective_date AND ORG.agreement_end_date ) Adj
ON adj.agent_ID = d.Agent_ID and adj.Agreement_Effective_Date = D.Agreement_Effective_Date
)WITH DATA PRIMARY INDEX(AGENT_ID) ON COMMIT PRESERVE ROWS;

COLLECT STATS COLUMN (AGENT_ID) ON #Adjust;

--Agreement was deleted from Sircon in 2017. Don't know why it is even in TRXHub.
--contracting will never be able to fix upstream because it was deleted.
DELETE FROM DHIER
WHERE NPN = '9364582' AND Agrmt_ID = '377478';

--replace erroneous 1/1/2099 end date with adjusted end date
-- add qualify row_number() to account for duplicate Agrmt_ID+Adjst_Agrt_End_Dt pairs in the #Adjust table
UPDATE DHIER
FROM DHIER, (
SELECT Adjst_Agrmt_End_Dt, Agrmt_ID
FROM #Adjust
QUALIFY ROW_NUMBER() OVER (PARTITION BY Agrmt_ID ORDER BY Adjst_Agrmt_End_Dt DESC) = 1) #Adj
SET agreement_end_Date = #Adj.Adjst_Agrmt_End_Dt
WHERE DHIER.AGRMT_ID = #Adj.Agrmt_ID
AND #Adj.Adjst_Agrmt_End_Dt IS NOT NULL;


/*
--------------------------------------------------------------
---------TEST RESULTS---------------------------------------

drop table #agentTest1;
CREATE MULTISET VOLATILE TABLE #AgentTest1 AS
(select agent_name, AGENT_ID, NPN, AGREEMENT_EFFECTIVE_DATE, agreement_end_date
, row_number() over (partition by AGENT_ID order by AGREEMENT_EFFECTIVE_DATE) as currentrec
,row_number() over (partition by AGENT_ID order by AGREEMENT_EFFECTIVE_DATE)+1 as nextrec
from DHier )
WITH DATA PRIMARY INDEX(AGENT_ID) ON COMMIT PRESERVE ROWS;

--Any Remaining Agreement Date overlap
select *from #agenttest1 org
left join #agenttest1 as nextrec
on org.agent_id = nextrec.agent_id and org.nextrec = nextrec.currentrec
where nextrec.agreement_effective_date between org.agreement_effective_date and org.agreement_end_date ;


--Test Count
Select count(*) from HSLABCustAnalytics.AGENT_AGREEMENT_HISTORY_test;

--Prod Count
Select count(*) from HSLABGROWTHRPT.AGENT_AGREEMENT_HISTORY ;

--EarliestDate
Select min(H.Agreement_Effective_Date)
FROM HSLABCustAnalytics.AGENT_AGREEMENT_HISTORY_test as H
Where H.Source = 'Sircon'
;
*/


--TEST TABLE UPDATE
DELETE FROM REPORTING_T.AGENT_AGREEMENT_HISTORY ALL;

INSERT INTO REPORTING_T.AGENT_AGREEMENT_HISTORY
SELECT D.*, Current_Timestamp AT LOCAL AS REPORT_DATE
FROM DHier AS D
;

COLLECT STATS COLUMN (AGRMT_ID) ON REPORTING_T.AGENT_AGREEMENT_HISTORY;
/*
--PROD TABLE UPDATE
DROP TABLE HSLABGrowthRpt.AGENT_AGREEMENT_HISTORY;
CREATE TABLE HSLABGrowthRpt.AGENT_AGREEMENT_HISTORY AS
(SELECT D.*,
Current_Timestamp AT LOCAL AS REPORT_DATE
FROM DHier AS D
) WITH DATA PRIMARY INDEX (AGENT_ID)
;
*/

--DROP TEMP TABLES
DROP TABLE LU;
DROP TABLE temp_BROKER_SIRCON_AGENT;
DROP TABLE EECHAN;
DROP TABLE DERCHAN;
DROP TABLE EECHAN2;
DROP TABLE HIER;
DROP TABLE AHIER;
DROP TABLE BHIER;
DROP TABLE CHIER;
DROP TABLE DHIER;
DROP TABLE #FINDBUGS;
DROP TABLE #ADJUST;

CALL HSPROCS.ABC_HEADER_LOAD('PROC_FOR_AGENT_AGREEMENT_HISTORY_LOAD','',:PROC_MSG);
CALL HSPROCS.ABC_DETAIL_LOAD_TD2TD('PROC_FOR_AGENT_AGREEMENT_HISTORY_LOAD',1,'TGT',:PROC_MSG);

SET PROC_MSG ='PROC_FOR_AGENT_AGREEMENT_HISTORY_LOAD EXECUTED SUCCESSFULLY';

END;
